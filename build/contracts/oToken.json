{
  "contractName": "oToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_collateral",
          "type": "address"
        },
        {
          "internalType": "int32",
          "name": "_collExp",
          "type": "int32"
        },
        {
          "internalType": "contract IERC20",
          "name": "_underlying",
          "type": "address"
        },
        {
          "internalType": "int32",
          "name": "_underlyingExp",
          "type": "int32"
        },
        {
          "internalType": "int32",
          "name": "_oTokenExchangeExp",
          "type": "int32"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "_strikeExp",
          "type": "int32"
        },
        {
          "internalType": "contract IERC20",
          "name": "_strike",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "internalType": "contract OptionsExchange",
          "name": "_optionsExchange",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_windowSize",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oTokensBurned",
          "type": "uint256"
        }
      ],
      "name": "BurnOTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        }
      ],
      "name": "ERC20CollateralAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        }
      ],
      "name": "ETHCollateralAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amtUnderlyingToPay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amtCollateralToPay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "exerciser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultExercisedFrom",
          "type": "address"
        }
      ],
      "name": "Exercise",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "issuedTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oTokensIssued",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "IssuedOTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amtCollateralToPay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "Liquidate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amtCollateralRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amtUnderlyingRedeemed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "RedeemVaultBalance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amtRemoved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "RemoveCollateral",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "RemoveUnderlying",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "TransferFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationIncentive",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transactionFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minCollateralizationRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "UpdateParameters",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "VaultOpened",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COMPOUND_ORACLE",
      "outputs": [
        {
          "internalType": "contract CompoundOracleInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "addERC20Collateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "addETHCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToBurn",
          "type": "uint256"
        }
      ],
      "name": "burnOTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateral",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralExp",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "oTokensToExercise",
          "type": "uint256"
        },
        {
          "internalType": "address payable[]",
          "name": "vaultsToExerciseFrom",
          "type": "address[]"
        }
      ],
      "name": "exercise",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "getVault",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVaultOwners",
      "outputs": [
        {
          "internalType": "address payable[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasExpired",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "hasVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_ierc20",
          "type": "address"
        }
      ],
      "name": "isETH",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isExerciseWindow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "isUnsafe",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "oTokensToIssue",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "issueOTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "oTokensToLiquidate",
          "type": "uint256"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "exponent",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationIncentive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "exponent",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmt",
          "type": "uint256"
        }
      ],
      "name": "maxOTokensIssuable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "vaultOwner",
          "type": "address"
        }
      ],
      "name": "maxOTokensLiquidatable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minCollateralizationRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "exponent",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oTokenExchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "exponent",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "openVault",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optionsExchange",
      "outputs": [
        {
          "internalType": "contract OptionsExchange",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "redeemVaultBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToRemove",
          "type": "uint256"
        }
      ],
      "name": "removeCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removeUnderlying",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "name": "setDetails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strike",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strikePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "exponent",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transactionFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "int32",
          "name": "exponent",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "transferFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlying",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingExp",
      "outputs": [
        {
          "internalType": "int32",
          "name": "",
          "type": "int32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "oTokensToExercise",
          "type": "uint256"
        }
      ],
      "name": "underlyingRequiredToExercise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_liquidationIncentive",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_transactionFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minCollateralizationRatio",
          "type": "uint256"
        }
      ],
      "name": "updateParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "createETHCollateralOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "addETHCollateralOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "createAndSellETHCollateralOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "addAndSellETHCollateralOption",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amtCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "createERC20CollateralOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amtCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "addERC20CollateralOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amtCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "createAndSellERC20CollateralOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amtToCreate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amtCollateral",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "addAndSellERC20CollateralOption",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_collateral\",\"type\":\"address\"},{\"internalType\":\"int32\",\"name\":\"_collExp\",\"type\":\"int32\"},{\"internalType\":\"contract IERC20\",\"name\":\"_underlying\",\"type\":\"address\"},{\"internalType\":\"int32\",\"name\":\"_underlyingExp\",\"type\":\"int32\"},{\"internalType\":\"int32\",\"name\":\"_oTokenExchangeExp\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"_strikeExp\",\"type\":\"int32\"},{\"internalType\":\"contract IERC20\",\"name\":\"_strike\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"contract OptionsExchange\",\"name\":\"_optionsExchange\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_windowSize\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oTokensBurned\",\"type\":\"uint256\"}],\"name\":\"BurnOTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"ERC20CollateralAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"}],\"name\":\"ETHCollateralAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amtUnderlyingToPay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amtCollateralToPay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"exerciser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultExercisedFrom\",\"type\":\"address\"}],\"name\":\"Exercise\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"issuedTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oTokensIssued\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"IssuedOTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amtCollateralToPay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amtCollateralRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amtUnderlyingRedeemed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"RedeemVaultBalance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amtRemoved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"RemoveCollateral\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"RemoveUnderlying\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"TransferFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationIncentive\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minCollateralizationRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"UpdateParameters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"VaultOpened\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMPOUND_ORACLE\",\"outputs\":[{\"internalType\":\"contract CompoundOracleInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addAndSellERC20CollateralOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addAndSellETHCollateralOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"addERC20Collateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addERC20CollateralOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"addETHCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addETHCollateralOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToBurn\",\"type\":\"uint256\"}],\"name\":\"burnOTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateral\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralExp\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createAndSellERC20CollateralOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createAndSellETHCollateralOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtCollateral\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createERC20CollateralOption\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToCreate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"createETHCollateralOption\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oTokensToExercise\",\"type\":\"uint256\"},{\"internalType\":\"address payable[]\",\"name\":\"vaultsToExerciseFrom\",\"type\":\"address[]\"}],\"name\":\"exercise\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"getVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVaultOwners\",\"outputs\":[{\"internalType\":\"address payable[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasExpired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"hasVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_ierc20\",\"type\":\"address\"}],\"name\":\"isETH\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isExerciseWindow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"isUnsafe\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oTokensToIssue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"issueOTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"oTokensToLiquidate\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"exponent\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"exponent\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmt\",\"type\":\"uint256\"}],\"name\":\"maxOTokensIssuable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"vaultOwner\",\"type\":\"address\"}],\"name\":\"maxOTokensLiquidatable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minCollateralizationRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"exponent\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oTokenExchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"exponent\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openVault\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optionsExchange\",\"outputs\":[{\"internalType\":\"contract OptionsExchange\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeemVaultBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amtToRemove\",\"type\":\"uint256\"}],\"name\":\"removeCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeUnderlying\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"setDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strike\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strikePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"exponent\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transactionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"int32\",\"name\":\"exponent\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"transferFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingExp\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"oTokensToExercise\",\"type\":\"uint256\"}],\"name\":\"underlyingRequiredToExercise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidationIncentive\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_transactionFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minCollateralizationRatio\",\"type\":\"uint256\"}],\"name\":\"updateParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Opyn\",\"methods\":{\"addAndSellERC20CollateralOption(uint256,uint256,address)\":{\"params\":{\"amtCollateral\":\"amount of collateral added\",\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"addAndSellETHCollateralOption(uint256,address)\":{\"params\":{\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"addERC20Collateral(address,uint256)\":{\"params\":{\"amt\":\"the amount of collateral to be transferred in.\",\"vaultOwner\":\"the index of the Vault to which collateral will be added.\"}},\"addERC20CollateralOption(uint256,uint256,address)\":{\"params\":{\"amtCollateral\":\"amount of collateral added\",\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"addETHCollateral(address)\":{\"params\":{\"vaultOwner\":\"the index of the Vault to which collateral will be added.\"}},\"addETHCollateralOption(uint256,address)\":{\"params\":{\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"returns\":{\"_0\":\"A uint256 specifying the amount of tokens still available for the spender.\"}},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"returns\":{\"_0\":\"A uint256 representing the amount owned by the passed address.\"}},\"burnOTokens(uint256)\":{\"details\":\"only want to call this function before expiry. After expiry, no benefit to calling it.\",\"params\":{\"amtToBurn\":\"number of oTokens to burn\"}},\"constructor\":{\"params\":{\"_collExp\":\"The precision of the collateral (-18 if ETH)\",\"_collateral\":\"The collateral asset\",\"_expiry\":\"The time at which the insurance expires\",\"_oTokenExchangeExp\":\"The precision of the `amount of underlying` that 1 oToken protects\",\"_optionsExchange\":\"The contract which interfaces with the exchange + oracle\",\"_oracleAddress\":\"The address of the oracle\",\"_strike\":\"The asset in which the insurance is calculated\",\"_strikeExp\":\"The precision of the strike asset (-18 if ETH)\",\"_strikePrice\":\"The amount of strike asset that will be paid out\",\"_underlying\":\"The asset that is being protected\",\"_underlyingExp\":\"The precision of the underlying asset\",\"_windowSize\":\"UNIX time. Exercise window is from `expiry - _windowSize` to `expiry`.\"}},\"createAndSellERC20CollateralOption(uint256,uint256,address)\":{\"params\":{\"amtCollateral\":\"amount of collateral added\",\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"createAndSellETHCollateralOption(uint256,address)\":{\"params\":{\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to receive the premiums\"}},\"createERC20CollateralOption(uint256,uint256,address)\":{\"params\":{\"amtCollateral\":\"amount of collateral added\",\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"createETHCollateralOption(uint256,address)\":{\"params\":{\"amtToCreate\":\"number of oTokens to create\",\"receiver\":\"address to send the Options to\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"exercise(uint256,address[])\":{\"params\":{\"oTokensToExercise\":\"the number of oTokens being exercised.\",\"vaultsToExerciseFrom\":\"the array of vaults to exercise from.\"}},\"getVault(address)\":{\"params\":{\"vaultOwner\":\"the owner of the Vault to return\"}},\"hasVault(address)\":{\"params\":{\"owner\":\"The address of the supposed owner\"},\"returns\":{\"_0\":\"true or false\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isETH(address)\":{\"params\":{\"_ierc20\":\"the ERC20 asset.\"}},\"isUnsafe(address)\":{\"params\":{\"vaultOwner\":\"The number of the vault to check\"},\"returns\":{\"_0\":\"true or false\"}},\"issueOTokens(uint256,address)\":{\"details\":\"The owner of a Vault should only be able to have a max of repo.collateral * collateralToStrike / (minminCollateralizationRatio * strikePrice) tokens issued.\",\"params\":{\"oTokensToIssue\":\"The number of o tokens to issue\",\"receiver\":\"The address to send the oTokens to\"}},\"liquidate(address,uint256)\":{\"details\":\"Liquidator comes with _oTokens. They get _oTokens * strikePrice * (incentive + fee) amount of collateral out. They can liquidate a max of liquidationFactor * vault.collateral out in one function call i.e. partial liquidations.\",\"params\":{\"oTokensToLiquidate\":\"The number of oTokens being taken out of circulation\",\"vaultOwner\":\"The index of the vault to be liquidated\"}},\"maxOTokensIssuable(uint256)\":{\"params\":{\"collateralAmt\":\"The amount of collateral against which oTokens will be issued.\"}},\"maxOTokensLiquidatable(address)\":{\"params\":{\"vaultOwner\":\"The index of the vault to be liquidated\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeemVaultBalance()\":{\"details\":\"The owner gets all of their collateral back if no exercise event took their collateral.\"},\"removeCollateral(uint256)\":{\"params\":{\"amtToRemove\":\"Amount of collateral to remove in 10^-18.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setDetails(string,string)\":{\"params\":{\"_name\":\"The name of the contract\",\"_symbol\":\"The symbol of the contract\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address.\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFee(address)\":{\"params\":{\"_address\":\"The address to send the fee to.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateParameters(uint256,uint256,uint256,uint256)\":{\"params\":{\"_liquidationFactor\":\"Max amount that a Vault can be liquidated by. 500 is 0.5.\",\"_liquidationIncentive\":\"The incentive paid to liquidator. 10 is 0.01 i.e. 1% incentive.\",\"_minCollateralizationRatio\":\"The minimum ratio of a Vault's collateral to insurance promised. 16 means 1.6.\",\"_transactionFee\":\"The fees paid to our protocol every time a execution happens. 100 is egs. 0.1 i.e. 10%.\"}}},\"title\":\"Opyn's Options Contract\"},\"userdoc\":{\"methods\":{\"addAndSellERC20CollateralOption(uint256,uint256,address)\":{\"notice\":\"adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\"},\"addAndSellETHCollateralOption(uint256,address)\":{\"notice\":\"adds ETH collateral to an existing Vault, and mints new oTokens and sells the oTokens in one step\"},\"addERC20Collateral(address,uint256)\":{\"notice\":\"If the collateral type is any ERC20, anyone can call this function any time before expiry to increase the amount of collateral in a Vault. Can only transfer in the collateral asset. Will fail if ETH is the collateral asset. The user has to allow the contract to handle their ERC20 tokens on his behalf before these functions are called. Remember that adding ERC20 collateral even if no oTokens have been created can put the owner at a risk of losing the collateral. Ensure that you issue and immediately sell the oTokens! (Either call the createAndSell function in the oToken contract or batch the addERC20Collateral, issueOTokens and sell transactions and ensure they happen atomically to protect the end user).\"},\"addERC20CollateralOption(uint256,uint256,address)\":{\"notice\":\"adds ERC20 collateral, and mints new oTokens in one step Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically.\"},\"addETHCollateral(address)\":{\"notice\":\"If the collateral type is ETH, anyone can call this function any time before expiry to increase the amount of collateral in a Vault. Will fail if ETH is not the collateral asset. Remember that adding ETH collateral even if no oTokens have been created can put the owner at a risk of losing the collateral if an exercise event happens. Ensure that you issue and immediately sell oTokens to allow the owner to earn premiums. (Either call the createAndSell function in the oToken contract or batch the addERC20Collateral, issueOTokens and sell transactions and ensure they happen atomically to protect the end user).\"},\"addETHCollateralOption(uint256,address)\":{\"notice\":\"adds ETH collateral, and mints new oTokens in one step to an existing Vault Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically.\"},\"burnOTokens(uint256)\":{\"notice\":\"allows the owner to burn their oTokens to increase the collateralization ratio of their vault.\"},\"createAndSellERC20CollateralOption(uint256,uint256,address)\":{\"notice\":\"opens a Vault, adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\"},\"createAndSellETHCollateralOption(uint256,address)\":{\"notice\":\"opens a Vault, adds ETH collateral, mints new oTokens and sell in one step\"},\"createERC20CollateralOption(uint256,uint256,address)\":{\"notice\":\"opens a Vault, adds ERC20 collateral, and mints new oTokens in one step Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically.\"},\"createETHCollateralOption(uint256,address)\":{\"notice\":\"opens a Vault, adds ETH collateral, and mints new oTokens in one step Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically.\"},\"exercise(uint256,address[])\":{\"notice\":\"Called by anyone holding the oTokens and underlying during the exercise window i.e. from `expiry - windowSize` time to `expiry` time. The caller transfers in their oTokens and corresponding amount of underlying and gets `strikePrice * oTokens` amount of collateral out. The collateral paid out is taken from the each vault owner starting with the first and iterating until the oTokens to exercise are found. NOTE: This uses a for loop and hence could run out of gas if the array passed in is too big!\"},\"getVault(address)\":{\"notice\":\"Returns the vault for a given address\"},\"getVaultOwners()\":{\"notice\":\"This function gets the array of vaultOwners\"},\"hasExpired()\":{\"notice\":\"Returns true if the oToken contract has expired\"},\"hasVault(address)\":{\"notice\":\"Checks if a `owner` has already created a Vault\"},\"isETH(address)\":{\"notice\":\"Returns true if the given ERC20 is ETH.\"},\"isExerciseWindow()\":{\"notice\":\"Returns true if exercise can be called\"},\"isUnsafe(address)\":{\"notice\":\"checks if a vault is unsafe. If so, it can be liquidated\"},\"issueOTokens(uint256,address)\":{\"notice\":\"This function is called to issue the option tokens. Remember that issuing oTokens even if they haven't been sold can put the owner at a risk of not making premiums on the oTokens. Ensure that you issue and immidiately sell the oTokens! (Either call the createAndSell function in the oToken contract of batch the issueOTokens transaction with a sell transaction and ensure it happens atomically).\"},\"liquidate(address,uint256)\":{\"notice\":\"This function can be called by anyone who notices a vault is undercollateralized. The caller gets a reward for reducing the amount of oTokens in circulation.\"},\"maxOTokensIssuable(uint256)\":{\"notice\":\"This function returns the maximum amount of oTokens that can safely be issued against the specified amount of collateral.\"},\"maxOTokensLiquidatable(address)\":{\"notice\":\"This function returns the maximum amount of collateral liquidatable if the given vault is unsafe\"},\"openVault()\":{\"notice\":\"Creates a new empty Vault and sets the owner of the vault to be the msg.sender.\"},\"redeemVaultBalance()\":{\"notice\":\"after expiry, each vault holder can get back their proportional share of collateral from vaults that they own.\"},\"removeCollateral(uint256)\":{\"notice\":\"allows the owner to remove excess collateral from the vault before expiry. Removing collateral lowers the collateralization ratio of the vault.\"},\"removeUnderlying()\":{\"notice\":\"This function allows the vault owner to remove their share of underlying after an exercise\"},\"setDetails(string,string)\":{\"notice\":\"Can only be called by owner. Used to set the name, symbol and decimals of the contract\"},\"transferFee(address)\":{\"notice\":\"Can only be called by owner. Used to take out the protocol fees from the contract.\"},\"underlyingRequiredToExercise(uint256)\":{\"notice\":\"Returns the amount of underlying to be transferred during an exercise call\"},\"updateParameters(uint256,uint256,uint256,uint256)\":{\"notice\":\"Can only be called by owner. Used to update the fees, minminCollateralizationRatio, etc\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/jenil/Desktop/code/hip/contracts/opyn/oToken.sol\":\"oToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jenil/Desktop/code/hip/contracts/ERC20/ERC20.sol\":{\"keccak256\":\"0x7dec91e02924add588dd961de7441337d56752fde4ffb26cd32e70f54caeb962\",\"urls\":[\"bzz-raw://0071f8c43069b68f2601611897b358bd07778edf56027d02d58b2c87a4e3adf4\",\"dweb:/ipfs/QmR9mMf9hmFpjSWj2PbeCDED1LAui8VStmEqGCq9qEofjY\"]},\"/Users/jenil/Desktop/code/hip/contracts/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x1441b6da09089763e48d79d04acd851a9a0af0fe413b954c320952749e74fe20\",\"urls\":[\"bzz-raw://58ea6b5bd3fdc6875b0485af355005c61da2256046468cd2e3056707deac85fa\",\"dweb:/ipfs/QmP2tche6BiUYcqyDJ1dKk7Ngjrx6VjigRmhE1EMMtthLg\"]},\"/Users/jenil/Desktop/code/hip/contracts/ERC20/IERC20.sol\":{\"keccak256\":\"0x31712bddbfa75b3f78607d7fc2dc00f84f2b5dcb087d7b1b11c2849b243da56d\",\"urls\":[\"bzz-raw://bd3cedc78460469350de613b4f9ba4500f34d763afe6988544d9f6fe60561042\",\"dweb:/ipfs/QmbUX8gxXqVUYzRi2LuNchsjFAK3hqM3xqML5Zp4iTzqWB\"]},\"/Users/jenil/Desktop/code/hip/contracts/SafeMath.sol\":{\"keccak256\":\"0xff7de5024228c01be5a2d04461136b04d5c4f88b599ab4033f495574d6a1494e\",\"urls\":[\"bzz-raw://4465c607da4d5c455227626ba3923d8b7ab4155768ac36bd8d4f3b144418b1f5\",\"dweb:/ipfs/Qmau8VRKdB3TKdQaaQW5ga7fymGt6NK3APLkgdL8o5y75z\"]},\"/Users/jenil/Desktop/code/hip/contracts/openZeppelin/Context.sol\":{\"keccak256\":\"0xd8b8eea0cc508e776962c7faaf955ea0ae83d63839dc0338aa4a8180b7a4d389\",\"urls\":[\"bzz-raw://ecf32a12b9c238f533c24a4516e772003da82f6665522cdc00701a3d3bee11cf\",\"dweb:/ipfs/QmeEGtkfnPrfWjuxq8EaupnPiR8qcSG1xgc8fdp9putYU8\"]},\"/Users/jenil/Desktop/code/hip/contracts/openZeppelin/Ownable.sol\":{\"keccak256\":\"0xb4aae3b7b86bcfbf163dfc3d92a7e4f28d29f115df74f5f4a447252d226bf5a5\",\"urls\":[\"bzz-raw://26df30eee5275630097e15fef86d13bfcbb31800730ed059d9a18628319b7dff\",\"dweb:/ipfs/QmSMSTAg2SnRVBkwPYXp417jndjpQE9c1D6XLUSnttv3gL\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/OptionsContract.sol\":{\"keccak256\":\"0x4dc75f989f5a46abdf8eb2b676ca8b553ff358ac6c2de80f8b6b1a88687dbe44\",\"urls\":[\"bzz-raw://8a716be12eb56996d704013c27a021fca6d91e031c357ce136c05c69d850f920\",\"dweb:/ipfs/Qme7tMdUAYs4rcQdtcCx1YDWcqw6B9v4zB5sLjmijFkjAe\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/OptionsExchange.sol\":{\"keccak256\":\"0xc15f8af3a271a3b166ec1e474437eec1ffd03de160f79c04b2bb4669c0df7c81\",\"urls\":[\"bzz-raw://35d0b656c827e701bd5e20d5a43d491d12f1c44e94311788aee78dac341e1a90\",\"dweb:/ipfs/QmUBpEAdpS5xhTjLXpUSwHPNQrdQ7qRLErDA6jh87z2mgb\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/OptionsUtils.sol\":{\"keccak256\":\"0x96d9cfd0dbac6d659c0758f714043b2b23a12984f854e101eb1cb6c399473dfa\",\"urls\":[\"bzz-raw://47d0ffdb7d02133f3c94ce54a9d54cae4ffc9a3ec40ebcb5e0a687a6e07b375c\",\"dweb:/ipfs/QmaFDuYZ9p6HdiQHKa57wy5ZbnuxYUU3L4Hegde26Yfitg\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/lib/CompoundOracleInterface.sol\":{\"keccak256\":\"0xce78167f1982c7b5e6f0c43a820cf18532ef4b87409592a9de4afdaf17afb1d2\",\"urls\":[\"bzz-raw://6e0c6420c143669f8df0dd0944a0e51864a1219449ef280fe48fc5757c176c81\",\"dweb:/ipfs/QmaPN5UyuHDwNC5WMZuAaTaiG9u1USbNeiXqHucGffWbUW\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/lib/UniswapExchangeInterface.sol\":{\"keccak256\":\"0xc233152c01409a74d1979d38b61a40adcf756f2f6165e1ef373dd8c0380da804\",\"urls\":[\"bzz-raw://4cd3dd849ddcfad26067901f43d64ff5536df7f118bca7a2b771d9dc45c61bcf\",\"dweb:/ipfs/QmadK9anV53Kw5FDkq6w2RAnmjT6i9JJoFTvaRx51cmQdA\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/lib/UniswapFactoryInterface.sol\":{\"keccak256\":\"0xdac49a7822e7535776f6203ef8f5a2eb143a4780f23578727b18c6e887ca801e\",\"urls\":[\"bzz-raw://19e0016f05bbc01be60c3793c726dcb35092c3f697b582bcb536307e5655f347\",\"dweb:/ipfs/QmSZZkWFP1hVfuymQMAviFf8WnQm8YHik1FSYQVxXFgsBD\"]},\"/Users/jenil/Desktop/code/hip/contracts/opyn/oToken.sol\":{\"keccak256\":\"0x4e35d13a14a0671cf9f1b14812dcc26f03148a5dd7cbb0fd99c25ad05728287a\",\"urls\":[\"bzz-raw://cc5e98d6581a0198147d2e759756be890af0348ac1cc9e277729bf4c064ab7bc\",\"dweb:/ipfs/QmUUQSTAU7jxzpump3oiuTWzZ838b8EWJbfudXCAH8bXdf\"]}},\"version\":1}",
  "bytecode": "0x600a608081905260021960a081905260078290556008805463ffffffff1990811663fffffffd908117909255600060c081905260e08490526009558354811682179093556101f461010081905261012092909252600b91909155600c805483169091179055610180604052601061014081905260001961016052600d55600e805463ffffffff9083161790556016805490911663ffffffee1767ffffffff00000000191667ffffffee00000000179055348015620000bc57600080fd5b50604051620045d7380380620045d78339818101604052610180811015620000e357600080fd5b508051602082015160408301516060840151608085015160a086015160c087015160e08801516101008901516101208a01516101408b0151610160909b0151999a9899979896979596949593949293919290918b8b8b8b8b8b8b8b8b8b8b8b600062000157640100000000620005f1810204565b60008054600160a060020a031916600160a060020a0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508342106200021057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616e2774206465706c6f7920616e206578706972656420636f6e7472616374604482015290519081900360640190fd5b838111156200026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180620044db603c913960400191505060405180910390fd5b6200027f8b640100000000620005f5810204565b620002d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018062004517602d913960400191505060405180910390fd5b620002ea89640100000000620005f5810204565b62000341576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180620045aa602d913960400191505060405180910390fd5b6200035586640100000000620005f5810204565b620003ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806200457b602f913960400191505060405180910390fd5b620003c088640100000000620005f5810204565b62000417576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526037815260200180620045446037913960400191505060405180910390fd5b8b601660086101000a815481600160a060020a030219169083600160a060020a031602179055508a601660006101000a81548163ffffffff021916908360030b63ffffffff16021790555089601760006101000a815481600160a060020a030219169083600160a060020a0316021790555088601660046101000a81548163ffffffff021916908360030b63ffffffff1602179055506040518060400160405280600181526020018960030b81525060116000820151816000015560208201518160010160006101000a81548163ffffffff021916908360030b63ffffffff16021790555090505060405180604001604052808881526020018760030b815250600f6000820151816000015560208201518160010160006101000a81548163ffffffff021916908360030b63ffffffff16021790555090505084601860006101000a815481600160a060020a030219169083600160a060020a031602179055508360158190555081601960006101000a815481600160a060020a030219169083600160a060020a0316021790555082600460006101000a815481600160a060020a030219169083600160a060020a031602179055508060138190555050505050505050505050505050505050505050505050505062000617565b3390565b6000601e8260030b13158015620006115750601d198260030b12155b92915050565b613eb480620006276000396000f3fe6080604052600436106103a9576000357c01000000000000000000000000000000000000000000000000000000009004806390e64d13116101f9578063c52987cf1161011f578063e184c9be116100bd578063ee1eab4f1161008c578063ee1eab4f14610ed6578063f2fde38b14610f12578063f70a250814610f45578063faa2041f14610f78576103a9565b8063e184c9be14610e38578063ea8c4bcf14610e4d578063eaa376b514610e80578063ed1f41c314610eaa576103a9565b8063cfbea789116100f9578063cfbea78914610d89578063d8dfeb4514610db5578063dd62ed3e14610dca578063dec44c0b14610e05576103a9565b8063c52987cf14610d02578063c56749ce14610d17578063cdb4b5c214610d56576103a9565b8063b2c2b13f11610197578063b7b090ee11610166578063b7b090ee14610b4e578063b96661ba14610c88578063ba1be55414610cb4578063bcbaf48714610cc9576103a9565b8063b2c2b13f14610ae1578063b6e61c0814610b0f578063b736554014610b24578063b76fdb6c14610b39576103a9565b80639ed3edf0116101d35780639ed3edf014610a45578063a457c2d714610a5a578063a9059cbb14610a93578063ad8f500814610acc576103a9565b806390e64d13146109f557806395d89b4114610a0a5780639ce0725114610a1f576103a9565b80633667429f116102de5780636f307dc31161027c57806386f547121161024b57806386f54712146109a15780638a5e8cc7146109b65780638c765e94146109cb5780638da5cb5b146109e0576103a9565b80636f307dc31461091a5780636fd865f91461092f57806370a0823114610959578063715018a61461098c576103a9565b806352f89fe3116102b857806352f89fe3146107c857806358b36dac146108075780635ca7c8a6146108b1578063686c1e21146108f0576103a9565b80633667429f14610732578063395093511461075e5780633bd33f6214610797576103a9565b806318160ddd1161034b578063313ce56711610325578063313ce5671461066b5780633226052d146106965780633237c158146106d5578063352ade55146106ff576103a9565b806318160ddd146105d85780631a0e21bd146105ed57806323b872dd14610628576103a9565b8063095ea7b311610387578063095ea7b3146104e85780630d453efb146105355780630d6cd8aa146105685780630eb9af381461057d576103a9565b806301b4a3c1146103ae578063060ab2ea146103f957806306fdde031461045e575b600080fd5b3480156103ba57600080fd5b506103e7600480360360408110156103d157600080fd5b50600160a060020a038135169060200135610f8d565b60408051918252519081900360200190f35b34801561040557600080fd5b5061040e611168565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561044a578181015183820152602001610432565b505050509050019250505060405180910390f35b34801561046a57600080fd5b5061047361120f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104ad578181015183820152602001610495565b50505050905090810190601f1680156104da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104f457600080fd5b506105216004803603604081101561050b57600080fd5b50600160a060020a03813516906020013561129d565b604080519115158252519081900360200190f35b34801561054157600080fd5b506105216004803603602081101561055857600080fd5b5035600160a060020a03166112b3565b34801561057457600080fd5b506105216112d8565b34801561058957600080fd5b506105b0600480360360208110156105a057600080fd5b5035600160a060020a0316611306565b6040805194855260208501939093528383019190915215156060830152519081900360800190f35b3480156105e457600080fd5b506103e761133a565b3480156105f957600080fd5b506106266004803603604081101561061057600080fd5b5080359060200135600160a060020a0316611340565b005b34801561063457600080fd5b506105216004803603606081101561064b57600080fd5b50600160a060020a038135811691602081013590911690604001356114c1565b34801561067757600080fd5b50610680611518565b6040805160ff9092168252519081900360200190f35b3480156106a257600080fd5b50610626600480360360608110156106b957600080fd5b5080359060208101359060400135600160a060020a0316611521565b3480156106e157600080fd5b50610626600480360360208110156106f857600080fd5b503561166b565b34801561070b57600080fd5b50610714611878565b60408051928352600391820b90910b60208301528051918290030190f35b6106266004803603604081101561074857600080fd5b5080359060200135600160a060020a0316611884565b34801561076a57600080fd5b506105216004803603604081101561078157600080fd5b50600160a060020a0381351690602001356119cb565b3480156107a357600080fd5b506107ac611a07565b60408051600160a060020a039092168252519081900360200190f35b3480156107d457600080fd5b50610626600480360360608110156107eb57600080fd5b5080359060208101359060400135600160a060020a0316611a16565b6106266004803603604081101561081d57600080fd5b8135919081019060408101602082013564010000000081111561083f57600080fd5b82018360208201111561085157600080fd5b8035906020019184602083028401116401000000008311171561087357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611a2f945050505050565b3480156108bd57600080fd5b50610626600480360360608110156108d457600080fd5b5080359060208101359060400135600160a060020a0316611b4d565b3480156108fc57600080fd5b506103e76004803603602081101561091357600080fd5b5035611b62565b34801561092657600080fd5b506107ac611b90565b34801561093b57600080fd5b506103e76004803603602081101561095257600080fd5b5035611b9f565b34801561096557600080fd5b506103e76004803603602081101561097c57600080fd5b5035600160a060020a0316611be4565b34801561099857600080fd5b50610626611bff565b3480156109ad57600080fd5b50610521611cb1565b3480156109c257600080fd5b506107ac611e39565b3480156109d757600080fd5b50610714611e48565b3480156109ec57600080fd5b506107ac611e54565b348015610a0157600080fd5b50610521611e63565b348015610a1657600080fd5b50610473611e6c565b6103e760048036036020811015610a3557600080fd5b5035600160a060020a0316611ec7565b348015610a5157600080fd5b5061071461200f565b348015610a6657600080fd5b5061052160048036036040811015610a7d57600080fd5b50600160a060020a03813516906020013561201b565b348015610a9f57600080fd5b5061052160048036036040811015610ab657600080fd5b50600160a060020a038135169060200135612057565b348015610ad857600080fd5b506107ac612064565b348015610aed57600080fd5b50610af6612073565b60408051600392830b90920b8252519081900360200190f35b348015610b1b57600080fd5b50610af6612084565b348015610b3057600080fd5b5061071461208d565b348015610b4557600080fd5b50610626612099565b348015610b5a57600080fd5b5061062660048036036040811015610b7157600080fd5b810190602081018135640100000000811115610b8c57600080fd5b820183602082011115610b9e57600080fd5b80359060200191846001830284011164010000000083111715610bc057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610c1357600080fd5b820183602082011115610c2557600080fd5b80359060200191846001830284011164010000000083111715610c4757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506121ab945050505050565b61062660048036036040811015610c9e57600080fd5b5080359060200135600160a060020a0316612250565b348015610cc057600080fd5b50610714612264565b348015610cd557600080fd5b5061062660048036036040811015610cec57600080fd5b50600160a060020a038135169060200135612270565b348015610d0e57600080fd5b50610714612593565b348015610d2357600080fd5b5061062660048036036060811015610d3a57600080fd5b5080359060208101359060400135600160a060020a031661259f565b348015610d6257600080fd5b5061052160048036036020811015610d7957600080fd5b5035600160a060020a03166125b3565b61062660048036036040811015610d9f57600080fd5b5080359060200135600160a060020a03166125d8565b348015610dc157600080fd5b506107ac6125ec565b348015610dd657600080fd5b506103e760048036036040811015610ded57600080fd5b50600160a060020a0381358116916020013516612607565b348015610e1157600080fd5b506103e760048036036020811015610e2857600080fd5b5035600160a060020a0316612632565b348015610e4457600080fd5b506103e76126fd565b348015610e5957600080fd5b5061062660048036036020811015610e7057600080fd5b5035600160a060020a0316612703565b348015610e8c57600080fd5b5061062660048036036020811015610ea357600080fd5b50356127b9565b61062660048036036040811015610ec057600080fd5b5080359060200135600160a060020a03166128c1565b348015610ee257600080fd5b5061062660048036036080811015610ef957600080fd5b50803590602081013590604081013590606001356128d4565b348015610f1e57600080fd5b5061062660048036036020811015610f3557600080fd5b5035600160a060020a0316612acc565b348015610f5157600080fd5b5061052160048036036020811015610f6857600080fd5b5035600160a060020a0316612bd7565b348015610f8457600080fd5b50610626612be4565b6000610f97611e63565b15610fda576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b601654604080517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101859052905168010000000000000000909204600160a060020a0316916323b872dd916064808201926020929091908290030181600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050506040513d602081101561108257600080fd5b50516110c25760405160e560020a62461bcd028152600401808060200182810382526027815260200180613cbe6027913960400191505060405180910390fd5b6110cb836112b3565b61110d576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b60408051600160a060020a038516815260208101849052338183015290517f2199418ea9428ed3ff7d460860e1edaf5831452fa4ea0f8d1a60d63c603487829181900360600190a161115f8383612cea565b90505b92915050565b6060806000805b600654811015611206576111a36006828154811061118957fe5b600091825260209091200154600160a060020a03166112b3565b156111fe57600681815481106111b557fe5b9060005260206000200160009054906101000a9004600160a060020a03168383815181106111df57fe5b600160a060020a03909216602092830291909101909101526001909101905b60010161116f565b50909150505b90565b601a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156112955780601f1061126a57610100808354040283529160200191611295565b820191906000526020600020905b81548152906001019060200180831161127857829003601f168201915b505050505081565b60006112aa338484612d6c565b50600192915050565b600160a060020a03811660009081526005602052604090206003015460ff165b919050565b60006112f1601354601554612df490919063ffffffff16565b4210158015611301575060155442105b905090565b600160a060020a03166000908152600560205260409020805460018201546002830154600390930154919390929160ff1690565b60035490565b611348611e63565b1561138b576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b611394336112b3565b6113d6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b33600090815260056020526040812060018101549091906113fd908563ffffffff612e0916565b905061140d826000015482612e1b565b611461576040805160e560020a62461bcd02815260206004820152600e60248201527f756e7361666520746f206d696e74000000000000000000000000000000000000604482015290519081900360640190fd5b600182018190556114728385612f48565b60408051600160a060020a038516815260208101869052338183015290517f5e5aaabf04e3760968ffb551bdf9708f4dbf95d53ad98539e91a56b125e88f089181900360600190a150505b5050565b60006114ce848484612ff2565b600160a060020a03841660009081526002602090815260408083203380855292529091205461150e918691611509908663ffffffff612df416565b612d6c565b5060019392505050565b601c5460ff1681565b61152b3383610f8d565b506115368330611340565b60048054604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0390921692820192909252602481018590529051309163095ea7b39160448083019260209291908290030181600087803b1580156115a557600080fd5b505af11580156115b9573d6000803e3d6000fd5b505050506040513d60208110156115cf57600080fd5b505060048054604080517f7dafae59000000000000000000000000000000000000000000000000000000008152600160a060020a03858116948201949094523060248201526000604482018190526064820188905291519390921692637dafae5992608480820193929182900301818387803b15801561164e57600080fd5b505af1158015611662573d6000803e3d6000fd5b50505050505050565b611673611e63565b156116b6576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b6000811161170e576040805160e560020a62461bcd02815260206004820152601a60248201527f43616e6e6f742072656d6f7665203020636f6c6c61746572616c000000000000604482015290519081900360640190fd5b611717336112b3565b611759576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b33600081815260056020526040902090611772906130bf565b8211156117b35760405160e560020a62461bcd028152600401808060200182810382526027815260200180613d8e6027913960400191505060405180910390fd5b80546000906117c8908463ffffffff612df416565b90506117d8818360010154612e1b565b61182c576040805160e560020a62461bcd02815260206004820152600f60248201527f5661756c7420697320756e736166650000000000000000000000000000000000604482015290519081900360640190fd5b80825561183933846130da565b6040805184815233602082015281517f5a945309b3c58e9bb259128c2a530a6579dc75ac1d7d61b3db4c0b8305a16821929181900390910190a1505050565b600b54600c5460030b82565b61188c611cb1565b506118978230612250565b60048054604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0390921692820192909252602481018490529051309163095ea7b39160448083019260209291908290030181600087803b15801561190657600080fd5b505af115801561191a573d6000803e3d6000fd5b505050506040513d602081101561193057600080fd5b505060048054604080517f7dafae59000000000000000000000000000000000000000000000000000000008152600160a060020a03858116948201949094523060248201526000604482018190526064820187905291519390921692637dafae5992608480820193929182900301818387803b1580156119af57600080fd5b505af11580156119c3573d6000803e3d6000fd5b505050505050565b336000818152600260209081526040808320600160a060020a038716845290915281205490916112aa918590611509908663ffffffff612e0916565b600454600160a060020a031681565b611a1e611cb1565b50611a2a838383611b4d565b505050565b60005b8151811015611b0c576000828281518110611a4957fe5b60200260200101519050611a5c816112b3565b611a9a5760405160e560020a62461bcd02815260040180806020018281038252602f815260200180613e02602f913960400191505060405180910390fd5b600160a060020a038116600090815260056020526040902084611abf575050506114bd565b84816001015410611adc57611ad485836131e8565b5050506114bd565b6001810154611af290869063ffffffff612df416565b9450611b028160010154836131e8565b5050600101611a32565b5081156114bd5760405160e560020a62461bcd02815260040180806020018281038252602d815260200180613d2a602d913960400191505060405180910390fd5b611b573383610f8d565b50611a2a8382611340565b60408051808201909152600d548152600e54600390810b810b900b6020820152600090611162908390613691565b601754600160a060020a031681565b6016546012546000916401000000009004600390810b91810b91909103900b611bdd8367ffffffffffffffff808416600a0a1663ffffffff6137b616565b9392505050565b600160a060020a031660009081526001602052604090205490565b611c076137dd565b600054600160a060020a03908116911614611c5a576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000611cbb611e63565b15611cfe576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b611d07336112b3565b15611d5c576040805160e560020a62461bcd02815260206004820152601560248201527f5661756c7420616c726561647920637265617465640000000000000000000000604482015290519081900360640190fd5b60408051608081018252600080825260208083018281528385018381526001606086018181523380875260058652888720975188559351878301559151600287015590516003909501805460ff1916951515959095179094556006805494850181559092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f909201805473ffffffffffffffffffffffffffffffffffffffff191682179055825190815291517f66a872561db77eb92ef3079a44a5af00c68c3a09e0976814a95bd91721f57c2f9281900390910190a150600190565b601954600160a060020a031681565b60075460085460030b82565b600054600160a060020a031690565b60155442101590565b601b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156112955780601f1061126a57610100808354040283529160200191611295565b6000611ed1611e63565b15611f14576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b601654611f3590680100000000000000009004600160a060020a0316612bd7565b611f735760405160e560020a62461bcd028152600401808060200182810382526028815260200180613c4b6028913960400191505060405180910390fd5b611f7c826112b3565b611fbe576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b60408051600160a060020a0384168152346020820152338183015290517ff24ce6016de57e90501829715846e26ac283a0aabfc160647e0ae8b05e0f433d9181900360600190a16111628234612cea565b600954600a5460030b82565b336000818152600260209081526040808320600160a060020a038716845290915281205490916112aa918590611509908663ffffffff612df416565b60006112aa338484612ff2565b601854600160a060020a031681565b601654640100000000900460030b81565b60165460030b81565b60115460125460030b82565b6120a1611e63565b6120df5760405160e560020a62461bcd028152600401808060200182810382526025815260200180613c996025913960400191505060405180910390fd5b6120e8336112b3565b61212a576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b336000818152600560205260408120805460028201805484845560018401859055939055909290919061215d90836130da565b61216733826137e1565b6040805183815260208101839052338183015290517fe481532a3f7d078365ca0145442ed0a0a3e0443f3c0bae0c29cff131112678389181900360600190a1505050565b6121b36137dd565b600054600160a060020a03908116911614612206576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b815161221990601a906020850190613b48565b50805161222d90601b906020840190613b48565b50601254601c805460ff191660039290920b60000360ff169190911790556114bd565b61225933611ec7565b506114bd8282611340565b600d54600e5460030b82565b612278611e63565b156122bb576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b6122c4826112b3565b612306576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b600160a060020a0382166000908152600560205260409020612327836125b3565b61237b576040805160e560020a62461bcd02815260206004820152600d60248201527f5661756c74206973207361666500000000000000000000000000000000000000604482015290519081900360640190fd5b33600160a060020a03841614156123dc576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e65722063616e2774206c6971756964617465207468656d73656c766573604482015290519081900360640190fd5b600061240183604051806040016040528060018152602001600060030b8152506138a0565b604080518082019091526007548152600854600390810b810b900b60208201529091506000906124329085906138a0565b90506000612446838363ffffffff612e0916565b600b5485549192506000916124609163ffffffff6137b616565b600c549091506000600391820b90910b131561249b57600c54612494908290600390810b900b600a0a63ffffffff6137b616565b90506124bf565b600c546124bc908290600390810b600003900b600a0a63ffffffff6139a716565b90505b808211156125015760405160e560020a62461bcd028152600401808060200182810382526037815260200180613d576037913960400191505060405180910390fd5b8454612513908363ffffffff612df416565b8555600185015461252a908763ffffffff612df416565b600186015561253933876139c9565b61254333836130da565b60408051838152600160a060020a0389166020820152338183015290517fcab8e1abb9f8235c6db895cf185336dc9461aecf477b98c1be83687ee549e66a9181900360600190a150505050505050565b600f5460105460030b82565b6125a7611cb1565b50611536838330611b4d565b6000806125d06125c2846130bf565b6125cb85613a72565b612e1b565b159392505050565b6125e133611ec7565b506118978230611340565b601654680100000000000000009004600160a060020a031681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600061263d826125b3565b156126f557600160a060020a0382166000908152600560205260408120600c54600b54825492939261269292600390810b8503900b600a0a91612686919063ffffffff6137b616565b9063ffffffff6139a716565b600854909150600390810b600003900b600a0a6126ad613bc6565b6040805180820190915260075481906126cc908563ffffffff612e0916565b8152600854600390810b900b60209091015290506126ea8382613691565b9450505050506112d3565b5060006112d3565b60155481565b61270b6137dd565b600054600160a060020a0390811691161461275e576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b60148054600090915561277182826130da565b60408051600160a060020a03841681526020810183905281517f88b171bb78d3ac5e1caa8e729dddce4e1322e84c80c093ebbe52507b62c77d98929181900390910190a15050565b6127c1611e63565b15612804576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b61280d336112b3565b61284f576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b3360009081526005602052604090206001810154612873908363ffffffff612df416565b600182015561288233836139c9565b604080513381526020810184905281517fdf8cebdea6ef1fd20576b80bc951377c0e61e2a8169153a1f836673ccce80e62929181900390910190a15050565b6128c9611cb1565b506114bd8282612250565b6128dc6137dd565b600054600160a060020a0390811691161461292f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b60c88411156129725760405160e560020a62461bcd028152600401808060200182810382526025815260200180613d056025913960400191505060405180910390fd5b6103e88311156129b65760405160e560020a62461bcd02815260040180806020018281038252602b815260200180613c20602b913960400191505060405180910390fd5b6064821115612a0f576040805160e560020a62461bcd02815260206004820181905260248201527f43616e27742068617665207472616e73616374696f6e20666565203e20313025604482015290519081900360640190fd5b600a811015612a525760405160e560020a62461bcd028152600401808060200182810382526028815260200180613bf86028913960400191505060405180910390fd5b6007849055600b8390556009829055600d8190557f3450d20c21ea671871fed271900cc8ff03badafa9b6fe2ff7f86991950e86b6b84848484612a93611e54565b604080519586526020860194909452848401929092526060840152600160a060020a03166080830152519081900360a00190a150505050565b612ad46137dd565b600054600160a060020a03908116911614612b27576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b600160a060020a038116612b6f5760405160e560020a62461bcd028152600401808060200182810382526026815260200180613c736026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03161590565b612bed336112b3565b612c2f576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b3360009081526005602052604090206002810154612c97576040805160e560020a62461bcd02815260206004820152601560248201527f4e6f20756e6465726c79696e672062616c616e63650000000000000000000000604482015290519081900360640190fd5b6002810180546000909155612cac33826137e1565b6040805182815233602082015281517fea0bff65fa9380b944e9a761f9c6a665ad2d31e74706a52773ddb45c8a57c83d929181900390910190a15050565b6000612cf4611e63565b15612d37576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b600160a060020a03831660009081526005602052604090208054612d61908463ffffffff612e0916565b908190559392505050565b600160a060020a038216612d7f57600080fd5b600160a060020a038316612d9257600080fd5b600160a060020a03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600082821115612e0357600080fd5b50900390565b60008282018381101561115f57600080fd5b6018546016546000916001918291600160a060020a03908116680100000000000000009092041614612e8357601654612e6890680100000000000000009004600160a060020a0316613a90565b601854909250612e8090600160a060020a0316613a90565b90505b600f54600d54600091612ead91612ea190889063ffffffff6137b616565b9063ffffffff6137b616565b601054600e54919250600391820b910b016000612ed4846126868a8863ffffffff6137b616565b601654909150600390810b90600090819085810b9084900b1215612f185782850360030b915083612f0f87600a85900a63ffffffff6137b616565b11159050612f3a565b84830360030b9150612f3484600a84900a63ffffffff6137b616565b86111590505b9a9950505050505050505050565b600160a060020a038216612f5b57600080fd5b600354612f6e908263ffffffff612e0916565b600355600160a060020a038216600090815260016020526040902054612f9a908263ffffffff612e0916565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821661300557600080fd5b600160a060020a03831660009081526001602052604090205461302e908263ffffffff612df416565b600160a060020a038085166000908152600160205260408082209390935590841681522054613063908263ffffffff612e0916565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600160a060020a031660009081526005602052604090205490565b6016546130fb90680100000000000000009004600160a060020a0316612bd7565b1561313c57604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015613136573d6000803e3d6000fd5b506114bd565b601654604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151680100000000000000009093049091169163a9059cbb916044808201926020929091908290030181600087803b1580156131b857600080fd5b505af11580156131cc573d6000803e3d6000fd5b505050506040513d60208110156131e257600080fd5b50505050565b6131f06112d8565b61322e5760405160e560020a62461bcd02815260040180806020018281038252602d815260200180613db5602d913960400191505060405180910390fd5b613237816112b3565b613279576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b600160a060020a0381166000908152600560205260409020826132e6576040805160e560020a62461bcd02815260206004820152601860248201527f43616e27742065786572636973652030206f546f6b656e730000000000000000604482015290519081900360640190fd5b806001015483111561332c5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613e31602e913960400191505060405180910390fd5b8261333633611be4565b101561338c576040805160e560020a62461bcd02815260206004820152601260248201527f4e6f7420656e6f756768206f546f6b656e730000000000000000000000000000604482015290519081900360640190fd5b600061339784611b9f565b60028301549091506133af908263ffffffff612e0916565b60028301556040805180820190915260018152600060208201819052906133d79086906138a0565b604080518082019091526009548152600a54600390810b810b900b60208201529091506000906134089087906138a0565b60145490915061341e908263ffffffff612e0916565b6014556000613433838363ffffffff612e0916565b855490915081111561348f576040805160e560020a62461bcd02815260206004820181905260248201527f5661756c7420756e64657277617465722c2063616e2774206578657263697365604482015290519081900360640190fd5b84546134a1908263ffffffff612df416565b855560018501546134b8908863ffffffff612df416565b60018601556017546134d290600160a060020a0316612bd7565b156135335783341461352e576040805160e560020a62461bcd02815260206004820152601360248201527f496e636f7272656374206d73672e76616c756500000000000000000000000000604482015290519081900360640190fd5b613626565b601754604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b1580156135a657600080fd5b505af11580156135ba573d6000803e3d6000fd5b505050506040513d60208110156135d057600080fd5b5051613626576040805160e560020a62461bcd02815260206004820152601c60248201527f436f756c64206e6f74207472616e7366657220696e20746f6b656e7300000000604482015290519081900360640190fd5b61363033886139c9565b61363a33846130da565b60408051858152602081018590523381830152600160a060020a038816606082015290517ffa7bab37479e50a9b24a9412b879d400de9bcaa1e3a2b343e90bb370d85bbaa79181900360800190a150505050505050565b6018546016546000916001918291600160a060020a039081166801000000000000000090920416146136f9576016546136de90680100000000000000009004600160a060020a0316613a90565b6018549092506136f690600160a060020a0316613a90565b90505b600f548451600091613711919063ffffffff6137b616565b601054602087015191925060030b016000613736846126868a8863ffffffff6137b616565b601654909150600390810b90600090819085810b9084900b12156137875782850360030b915061378061377387600a85900a63ffffffff6137b616565b859063ffffffff6139a716565b9050612f3a565b84830360030b91506137a78661268686600a86900a63ffffffff6137b616565b9b9a5050505050505050505050565b6000826137c557506000611162565b828202828482816137d257fe5b041461115f57600080fd5b3390565b6017546137f690600160a060020a0316612bd7565b1561383157604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015613136573d6000803e3d6000fd5b601754604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156131b857600080fd5b6018546016546000916001918291600160a060020a03908116680100000000000000009092041614613908576016546138ed90680100000000000000009004600160a060020a0316613a90565b60185490925061390590600160a060020a0316613a90565b90505b8351600f54600091613929918491612ea19182908b9063ffffffff6137b616565b6016546020870151601054929350600391820b92820b01919091039060009082900b811215613977578161396f866126868663ffffffff808616600a0a8116906137b616565b91505061399c565b6000829003613998866126868663ffffffff808616600a0a8116906139a716565b9150505b979650505050505050565b60008082116139b557600080fd5b60008284816139c057fe5b04949350505050565b600160a060020a0382166139dc57600080fd5b6003546139ef908263ffffffff612df416565b600355600160a060020a038216600090815260016020526040902054613a1b908263ffffffff612df416565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a031660009081526005602052604090206001015490565b6000600160a060020a038216613aaf5750670de0b6b3a76400006112d3565b601954604080517f41976e09000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916341976e09916024808301926020929190829003018186803b158015613b1557600080fd5b505afa158015613b29573d6000803e3d6000fd5b505050506040513d6020811015613b3f57600080fd5b505190506112d3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613b8957805160ff1916838001178555613bb6565b82800160010185558215613bb6579182015b82811115613bb6578251825591602001919060010190613b9b565b50613bc2929150613bdd565b5090565b604080518082019091526000808252602082015290565b61120c91905b80821115613bc25760008155600101613be356fe43616e27742068617665206d696e436f6c6c61746572616c697a6174696f6e526174696f203c203143616e2774206c6971756964617465206d6f7265207468616e2031303025206f6620746865207661756c74455448206973206e6f74207468652073706563696669656420636f6c6c61746572616c20747970654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e277420636f6c6c65637420636f6c6c61746572616c20756e74696c20657870697279436f756c64206e6f74207472616e7366657220696e20636f6c6c61746572616c20746f6b656e735661756c7420646f6573206e6f7420657869737400000000000000000000000043616e27742068617665203e323025206c69717569646174696f6e20696e63656e74697665537065636966696564207661756c7473206861766520696e73756666696369656e7420636f6c6c61746572616c43616e206f6e6c79206c6971756964617465206c69717569646174696f6e20666163746f7220617420616e7920676976656e2074696d6543616e27742072656d6f7665206d6f726520636f6c6c61746572616c207468616e206f776e656443616e2774206578657263697365206f757473696465206f66207468652065786572636973652077696e646f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f742065786572636973652066726f6d2061207661756c74207468617420646f65736e277420657869737443616e2774206578657263697365206d6f7265206f546f6b656e73207468616e20746865206f776e6572206861734f7074696f6e7320636f6e747261637420657870697265640000000000000000a264697066735822122070a93dfba933afec10645d8f7a2f45bfb9e863bbbdce378a7f35b97730bb146264736f6c6343000600003345786572636973652077696e646f772063616e2774206265206c6f6e676572207468616e2074686520636f6e74726163742773206c6966657370616e636f6c6c61746572616c206578706f6e656e74206e6f742077697468696e2065787065637465642072616e67656f546f6b656e2065786368616e67652072617465206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765737472696b65207072696365206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765756e6465726c79696e67206578706f6e656e74206e6f742077697468696e2065787065637465642072616e6765",
  "deployedBytecode": "0x6080604052600436106103a9576000357c01000000000000000000000000000000000000000000000000000000009004806390e64d13116101f9578063c52987cf1161011f578063e184c9be116100bd578063ee1eab4f1161008c578063ee1eab4f14610ed6578063f2fde38b14610f12578063f70a250814610f45578063faa2041f14610f78576103a9565b8063e184c9be14610e38578063ea8c4bcf14610e4d578063eaa376b514610e80578063ed1f41c314610eaa576103a9565b8063cfbea789116100f9578063cfbea78914610d89578063d8dfeb4514610db5578063dd62ed3e14610dca578063dec44c0b14610e05576103a9565b8063c52987cf14610d02578063c56749ce14610d17578063cdb4b5c214610d56576103a9565b8063b2c2b13f11610197578063b7b090ee11610166578063b7b090ee14610b4e578063b96661ba14610c88578063ba1be55414610cb4578063bcbaf48714610cc9576103a9565b8063b2c2b13f14610ae1578063b6e61c0814610b0f578063b736554014610b24578063b76fdb6c14610b39576103a9565b80639ed3edf0116101d35780639ed3edf014610a45578063a457c2d714610a5a578063a9059cbb14610a93578063ad8f500814610acc576103a9565b806390e64d13146109f557806395d89b4114610a0a5780639ce0725114610a1f576103a9565b80633667429f116102de5780636f307dc31161027c57806386f547121161024b57806386f54712146109a15780638a5e8cc7146109b65780638c765e94146109cb5780638da5cb5b146109e0576103a9565b80636f307dc31461091a5780636fd865f91461092f57806370a0823114610959578063715018a61461098c576103a9565b806352f89fe3116102b857806352f89fe3146107c857806358b36dac146108075780635ca7c8a6146108b1578063686c1e21146108f0576103a9565b80633667429f14610732578063395093511461075e5780633bd33f6214610797576103a9565b806318160ddd1161034b578063313ce56711610325578063313ce5671461066b5780633226052d146106965780633237c158146106d5578063352ade55146106ff576103a9565b806318160ddd146105d85780631a0e21bd146105ed57806323b872dd14610628576103a9565b8063095ea7b311610387578063095ea7b3146104e85780630d453efb146105355780630d6cd8aa146105685780630eb9af381461057d576103a9565b806301b4a3c1146103ae578063060ab2ea146103f957806306fdde031461045e575b600080fd5b3480156103ba57600080fd5b506103e7600480360360408110156103d157600080fd5b50600160a060020a038135169060200135610f8d565b60408051918252519081900360200190f35b34801561040557600080fd5b5061040e611168565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561044a578181015183820152602001610432565b505050509050019250505060405180910390f35b34801561046a57600080fd5b5061047361120f565b6040805160208082528351818301528351919283929083019185019080838360005b838110156104ad578181015183820152602001610495565b50505050905090810190601f1680156104da5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104f457600080fd5b506105216004803603604081101561050b57600080fd5b50600160a060020a03813516906020013561129d565b604080519115158252519081900360200190f35b34801561054157600080fd5b506105216004803603602081101561055857600080fd5b5035600160a060020a03166112b3565b34801561057457600080fd5b506105216112d8565b34801561058957600080fd5b506105b0600480360360208110156105a057600080fd5b5035600160a060020a0316611306565b6040805194855260208501939093528383019190915215156060830152519081900360800190f35b3480156105e457600080fd5b506103e761133a565b3480156105f957600080fd5b506106266004803603604081101561061057600080fd5b5080359060200135600160a060020a0316611340565b005b34801561063457600080fd5b506105216004803603606081101561064b57600080fd5b50600160a060020a038135811691602081013590911690604001356114c1565b34801561067757600080fd5b50610680611518565b6040805160ff9092168252519081900360200190f35b3480156106a257600080fd5b50610626600480360360608110156106b957600080fd5b5080359060208101359060400135600160a060020a0316611521565b3480156106e157600080fd5b50610626600480360360208110156106f857600080fd5b503561166b565b34801561070b57600080fd5b50610714611878565b60408051928352600391820b90910b60208301528051918290030190f35b6106266004803603604081101561074857600080fd5b5080359060200135600160a060020a0316611884565b34801561076a57600080fd5b506105216004803603604081101561078157600080fd5b50600160a060020a0381351690602001356119cb565b3480156107a357600080fd5b506107ac611a07565b60408051600160a060020a039092168252519081900360200190f35b3480156107d457600080fd5b50610626600480360360608110156107eb57600080fd5b5080359060208101359060400135600160a060020a0316611a16565b6106266004803603604081101561081d57600080fd5b8135919081019060408101602082013564010000000081111561083f57600080fd5b82018360208201111561085157600080fd5b8035906020019184602083028401116401000000008311171561087357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611a2f945050505050565b3480156108bd57600080fd5b50610626600480360360608110156108d457600080fd5b5080359060208101359060400135600160a060020a0316611b4d565b3480156108fc57600080fd5b506103e76004803603602081101561091357600080fd5b5035611b62565b34801561092657600080fd5b506107ac611b90565b34801561093b57600080fd5b506103e76004803603602081101561095257600080fd5b5035611b9f565b34801561096557600080fd5b506103e76004803603602081101561097c57600080fd5b5035600160a060020a0316611be4565b34801561099857600080fd5b50610626611bff565b3480156109ad57600080fd5b50610521611cb1565b3480156109c257600080fd5b506107ac611e39565b3480156109d757600080fd5b50610714611e48565b3480156109ec57600080fd5b506107ac611e54565b348015610a0157600080fd5b50610521611e63565b348015610a1657600080fd5b50610473611e6c565b6103e760048036036020811015610a3557600080fd5b5035600160a060020a0316611ec7565b348015610a5157600080fd5b5061071461200f565b348015610a6657600080fd5b5061052160048036036040811015610a7d57600080fd5b50600160a060020a03813516906020013561201b565b348015610a9f57600080fd5b5061052160048036036040811015610ab657600080fd5b50600160a060020a038135169060200135612057565b348015610ad857600080fd5b506107ac612064565b348015610aed57600080fd5b50610af6612073565b60408051600392830b90920b8252519081900360200190f35b348015610b1b57600080fd5b50610af6612084565b348015610b3057600080fd5b5061071461208d565b348015610b4557600080fd5b50610626612099565b348015610b5a57600080fd5b5061062660048036036040811015610b7157600080fd5b810190602081018135640100000000811115610b8c57600080fd5b820183602082011115610b9e57600080fd5b80359060200191846001830284011164010000000083111715610bc057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050640100000000811115610c1357600080fd5b820183602082011115610c2557600080fd5b80359060200191846001830284011164010000000083111715610c4757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506121ab945050505050565b61062660048036036040811015610c9e57600080fd5b5080359060200135600160a060020a0316612250565b348015610cc057600080fd5b50610714612264565b348015610cd557600080fd5b5061062660048036036040811015610cec57600080fd5b50600160a060020a038135169060200135612270565b348015610d0e57600080fd5b50610714612593565b348015610d2357600080fd5b5061062660048036036060811015610d3a57600080fd5b5080359060208101359060400135600160a060020a031661259f565b348015610d6257600080fd5b5061052160048036036020811015610d7957600080fd5b5035600160a060020a03166125b3565b61062660048036036040811015610d9f57600080fd5b5080359060200135600160a060020a03166125d8565b348015610dc157600080fd5b506107ac6125ec565b348015610dd657600080fd5b506103e760048036036040811015610ded57600080fd5b50600160a060020a0381358116916020013516612607565b348015610e1157600080fd5b506103e760048036036020811015610e2857600080fd5b5035600160a060020a0316612632565b348015610e4457600080fd5b506103e76126fd565b348015610e5957600080fd5b5061062660048036036020811015610e7057600080fd5b5035600160a060020a0316612703565b348015610e8c57600080fd5b5061062660048036036020811015610ea357600080fd5b50356127b9565b61062660048036036040811015610ec057600080fd5b5080359060200135600160a060020a03166128c1565b348015610ee257600080fd5b5061062660048036036080811015610ef957600080fd5b50803590602081013590604081013590606001356128d4565b348015610f1e57600080fd5b5061062660048036036020811015610f3557600080fd5b5035600160a060020a0316612acc565b348015610f5157600080fd5b5061052160048036036020811015610f6857600080fd5b5035600160a060020a0316612bd7565b348015610f8457600080fd5b50610626612be4565b6000610f97611e63565b15610fda576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b601654604080517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101859052905168010000000000000000909204600160a060020a0316916323b872dd916064808201926020929091908290030181600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050506040513d602081101561108257600080fd5b50516110c25760405160e560020a62461bcd028152600401808060200182810382526027815260200180613cbe6027913960400191505060405180910390fd5b6110cb836112b3565b61110d576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b60408051600160a060020a038516815260208101849052338183015290517f2199418ea9428ed3ff7d460860e1edaf5831452fa4ea0f8d1a60d63c603487829181900360600190a161115f8383612cea565b90505b92915050565b6060806000805b600654811015611206576111a36006828154811061118957fe5b600091825260209091200154600160a060020a03166112b3565b156111fe57600681815481106111b557fe5b9060005260206000200160009054906101000a9004600160a060020a03168383815181106111df57fe5b600160a060020a03909216602092830291909101909101526001909101905b60010161116f565b50909150505b90565b601a805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156112955780601f1061126a57610100808354040283529160200191611295565b820191906000526020600020905b81548152906001019060200180831161127857829003601f168201915b505050505081565b60006112aa338484612d6c565b50600192915050565b600160a060020a03811660009081526005602052604090206003015460ff165b919050565b60006112f1601354601554612df490919063ffffffff16565b4210158015611301575060155442105b905090565b600160a060020a03166000908152600560205260409020805460018201546002830154600390930154919390929160ff1690565b60035490565b611348611e63565b1561138b576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b611394336112b3565b6113d6576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b33600090815260056020526040812060018101549091906113fd908563ffffffff612e0916565b905061140d826000015482612e1b565b611461576040805160e560020a62461bcd02815260206004820152600e60248201527f756e7361666520746f206d696e74000000000000000000000000000000000000604482015290519081900360640190fd5b600182018190556114728385612f48565b60408051600160a060020a038516815260208101869052338183015290517f5e5aaabf04e3760968ffb551bdf9708f4dbf95d53ad98539e91a56b125e88f089181900360600190a150505b5050565b60006114ce848484612ff2565b600160a060020a03841660009081526002602090815260408083203380855292529091205461150e918691611509908663ffffffff612df416565b612d6c565b5060019392505050565b601c5460ff1681565b61152b3383610f8d565b506115368330611340565b60048054604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0390921692820192909252602481018590529051309163095ea7b39160448083019260209291908290030181600087803b1580156115a557600080fd5b505af11580156115b9573d6000803e3d6000fd5b505050506040513d60208110156115cf57600080fd5b505060048054604080517f7dafae59000000000000000000000000000000000000000000000000000000008152600160a060020a03858116948201949094523060248201526000604482018190526064820188905291519390921692637dafae5992608480820193929182900301818387803b15801561164e57600080fd5b505af1158015611662573d6000803e3d6000fd5b50505050505050565b611673611e63565b156116b6576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b6000811161170e576040805160e560020a62461bcd02815260206004820152601a60248201527f43616e6e6f742072656d6f7665203020636f6c6c61746572616c000000000000604482015290519081900360640190fd5b611717336112b3565b611759576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b33600081815260056020526040902090611772906130bf565b8211156117b35760405160e560020a62461bcd028152600401808060200182810382526027815260200180613d8e6027913960400191505060405180910390fd5b80546000906117c8908463ffffffff612df416565b90506117d8818360010154612e1b565b61182c576040805160e560020a62461bcd02815260206004820152600f60248201527f5661756c7420697320756e736166650000000000000000000000000000000000604482015290519081900360640190fd5b80825561183933846130da565b6040805184815233602082015281517f5a945309b3c58e9bb259128c2a530a6579dc75ac1d7d61b3db4c0b8305a16821929181900390910190a1505050565b600b54600c5460030b82565b61188c611cb1565b506118978230612250565b60048054604080517f095ea7b3000000000000000000000000000000000000000000000000000000008152600160a060020a0390921692820192909252602481018490529051309163095ea7b39160448083019260209291908290030181600087803b15801561190657600080fd5b505af115801561191a573d6000803e3d6000fd5b505050506040513d602081101561193057600080fd5b505060048054604080517f7dafae59000000000000000000000000000000000000000000000000000000008152600160a060020a03858116948201949094523060248201526000604482018190526064820187905291519390921692637dafae5992608480820193929182900301818387803b1580156119af57600080fd5b505af11580156119c3573d6000803e3d6000fd5b505050505050565b336000818152600260209081526040808320600160a060020a038716845290915281205490916112aa918590611509908663ffffffff612e0916565b600454600160a060020a031681565b611a1e611cb1565b50611a2a838383611b4d565b505050565b60005b8151811015611b0c576000828281518110611a4957fe5b60200260200101519050611a5c816112b3565b611a9a5760405160e560020a62461bcd02815260040180806020018281038252602f815260200180613e02602f913960400191505060405180910390fd5b600160a060020a038116600090815260056020526040902084611abf575050506114bd565b84816001015410611adc57611ad485836131e8565b5050506114bd565b6001810154611af290869063ffffffff612df416565b9450611b028160010154836131e8565b5050600101611a32565b5081156114bd5760405160e560020a62461bcd02815260040180806020018281038252602d815260200180613d2a602d913960400191505060405180910390fd5b611b573383610f8d565b50611a2a8382611340565b60408051808201909152600d548152600e54600390810b810b900b6020820152600090611162908390613691565b601754600160a060020a031681565b6016546012546000916401000000009004600390810b91810b91909103900b611bdd8367ffffffffffffffff808416600a0a1663ffffffff6137b616565b9392505050565b600160a060020a031660009081526001602052604090205490565b611c076137dd565b600054600160a060020a03908116911614611c5a576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000611cbb611e63565b15611cfe576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b611d07336112b3565b15611d5c576040805160e560020a62461bcd02815260206004820152601560248201527f5661756c7420616c726561647920637265617465640000000000000000000000604482015290519081900360640190fd5b60408051608081018252600080825260208083018281528385018381526001606086018181523380875260058652888720975188559351878301559151600287015590516003909501805460ff1916951515959095179094556006805494850181559092527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f909201805473ffffffffffffffffffffffffffffffffffffffff191682179055825190815291517f66a872561db77eb92ef3079a44a5af00c68c3a09e0976814a95bd91721f57c2f9281900390910190a150600190565b601954600160a060020a031681565b60075460085460030b82565b600054600160a060020a031690565b60155442101590565b601b805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156112955780601f1061126a57610100808354040283529160200191611295565b6000611ed1611e63565b15611f14576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b601654611f3590680100000000000000009004600160a060020a0316612bd7565b611f735760405160e560020a62461bcd028152600401808060200182810382526028815260200180613c4b6028913960400191505060405180910390fd5b611f7c826112b3565b611fbe576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b60408051600160a060020a0384168152346020820152338183015290517ff24ce6016de57e90501829715846e26ac283a0aabfc160647e0ae8b05e0f433d9181900360600190a16111628234612cea565b600954600a5460030b82565b336000818152600260209081526040808320600160a060020a038716845290915281205490916112aa918590611509908663ffffffff612df416565b60006112aa338484612ff2565b601854600160a060020a031681565b601654640100000000900460030b81565b60165460030b81565b60115460125460030b82565b6120a1611e63565b6120df5760405160e560020a62461bcd028152600401808060200182810382526025815260200180613c996025913960400191505060405180910390fd5b6120e8336112b3565b61212a576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b336000818152600560205260408120805460028201805484845560018401859055939055909290919061215d90836130da565b61216733826137e1565b6040805183815260208101839052338183015290517fe481532a3f7d078365ca0145442ed0a0a3e0443f3c0bae0c29cff131112678389181900360600190a1505050565b6121b36137dd565b600054600160a060020a03908116911614612206576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b815161221990601a906020850190613b48565b50805161222d90601b906020840190613b48565b50601254601c805460ff191660039290920b60000360ff169190911790556114bd565b61225933611ec7565b506114bd8282611340565b600d54600e5460030b82565b612278611e63565b156122bb576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b6122c4826112b3565b612306576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b600160a060020a0382166000908152600560205260409020612327836125b3565b61237b576040805160e560020a62461bcd02815260206004820152600d60248201527f5661756c74206973207361666500000000000000000000000000000000000000604482015290519081900360640190fd5b33600160a060020a03841614156123dc576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e65722063616e2774206c6971756964617465207468656d73656c766573604482015290519081900360640190fd5b600061240183604051806040016040528060018152602001600060030b8152506138a0565b604080518082019091526007548152600854600390810b810b900b60208201529091506000906124329085906138a0565b90506000612446838363ffffffff612e0916565b600b5485549192506000916124609163ffffffff6137b616565b600c549091506000600391820b90910b131561249b57600c54612494908290600390810b900b600a0a63ffffffff6137b616565b90506124bf565b600c546124bc908290600390810b600003900b600a0a63ffffffff6139a716565b90505b808211156125015760405160e560020a62461bcd028152600401808060200182810382526037815260200180613d576037913960400191505060405180910390fd5b8454612513908363ffffffff612df416565b8555600185015461252a908763ffffffff612df416565b600186015561253933876139c9565b61254333836130da565b60408051838152600160a060020a0389166020820152338183015290517fcab8e1abb9f8235c6db895cf185336dc9461aecf477b98c1be83687ee549e66a9181900360600190a150505050505050565b600f5460105460030b82565b6125a7611cb1565b50611536838330611b4d565b6000806125d06125c2846130bf565b6125cb85613a72565b612e1b565b159392505050565b6125e133611ec7565b506118978230611340565b601654680100000000000000009004600160a060020a031681565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b600061263d826125b3565b156126f557600160a060020a0382166000908152600560205260408120600c54600b54825492939261269292600390810b8503900b600a0a91612686919063ffffffff6137b616565b9063ffffffff6139a716565b600854909150600390810b600003900b600a0a6126ad613bc6565b6040805180820190915260075481906126cc908563ffffffff612e0916565b8152600854600390810b900b60209091015290506126ea8382613691565b9450505050506112d3565b5060006112d3565b60155481565b61270b6137dd565b600054600160a060020a0390811691161461275e576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b60148054600090915561277182826130da565b60408051600160a060020a03841681526020810183905281517f88b171bb78d3ac5e1caa8e729dddce4e1322e84c80c093ebbe52507b62c77d98929181900390910190a15050565b6127c1611e63565b15612804576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b61280d336112b3565b61284f576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b3360009081526005602052604090206001810154612873908363ffffffff612df416565b600182015561288233836139c9565b604080513381526020810184905281517fdf8cebdea6ef1fd20576b80bc951377c0e61e2a8169153a1f836673ccce80e62929181900390910190a15050565b6128c9611cb1565b506114bd8282612250565b6128dc6137dd565b600054600160a060020a0390811691161461292f576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b60c88411156129725760405160e560020a62461bcd028152600401808060200182810382526025815260200180613d056025913960400191505060405180910390fd5b6103e88311156129b65760405160e560020a62461bcd02815260040180806020018281038252602b815260200180613c20602b913960400191505060405180910390fd5b6064821115612a0f576040805160e560020a62461bcd02815260206004820181905260248201527f43616e27742068617665207472616e73616374696f6e20666565203e20313025604482015290519081900360640190fd5b600a811015612a525760405160e560020a62461bcd028152600401808060200182810382526028815260200180613bf86028913960400191505060405180910390fd5b6007849055600b8390556009829055600d8190557f3450d20c21ea671871fed271900cc8ff03badafa9b6fe2ff7f86991950e86b6b84848484612a93611e54565b604080519586526020860194909452848401929092526060840152600160a060020a03166080830152519081900360a00190a150505050565b612ad46137dd565b600054600160a060020a03908116911614612b27576040805160e560020a62461bcd0281526020600482018190526024820152600080516020613de2833981519152604482015290519081900360640190fd5b600160a060020a038116612b6f5760405160e560020a62461bcd028152600401808060200182810382526026815260200180613c736026913960400191505060405180910390fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a03161590565b612bed336112b3565b612c2f576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b3360009081526005602052604090206002810154612c97576040805160e560020a62461bcd02815260206004820152601560248201527f4e6f20756e6465726c79696e672062616c616e63650000000000000000000000604482015290519081900360640190fd5b6002810180546000909155612cac33826137e1565b6040805182815233602082015281517fea0bff65fa9380b944e9a761f9c6a665ad2d31e74706a52773ddb45c8a57c83d929181900390910190a15050565b6000612cf4611e63565b15612d37576040805160e560020a62461bcd0281526020600482015260186024820152600080516020613e5f833981519152604482015290519081900360640190fd5b600160a060020a03831660009081526005602052604090208054612d61908463ffffffff612e0916565b908190559392505050565b600160a060020a038216612d7f57600080fd5b600160a060020a038316612d9257600080fd5b600160a060020a03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b600082821115612e0357600080fd5b50900390565b60008282018381101561115f57600080fd5b6018546016546000916001918291600160a060020a03908116680100000000000000009092041614612e8357601654612e6890680100000000000000009004600160a060020a0316613a90565b601854909250612e8090600160a060020a0316613a90565b90505b600f54600d54600091612ead91612ea190889063ffffffff6137b616565b9063ffffffff6137b616565b601054600e54919250600391820b910b016000612ed4846126868a8863ffffffff6137b616565b601654909150600390810b90600090819085810b9084900b1215612f185782850360030b915083612f0f87600a85900a63ffffffff6137b616565b11159050612f3a565b84830360030b9150612f3484600a84900a63ffffffff6137b616565b86111590505b9a9950505050505050505050565b600160a060020a038216612f5b57600080fd5b600354612f6e908263ffffffff612e0916565b600355600160a060020a038216600090815260016020526040902054612f9a908263ffffffff612e0916565b600160a060020a03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821661300557600080fd5b600160a060020a03831660009081526001602052604090205461302e908263ffffffff612df416565b600160a060020a038085166000908152600160205260408082209390935590841681522054613063908263ffffffff612e0916565b600160a060020a0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600160a060020a031660009081526005602052604090205490565b6016546130fb90680100000000000000009004600160a060020a0316612bd7565b1561313c57604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015613136573d6000803e3d6000fd5b506114bd565b601654604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151680100000000000000009093049091169163a9059cbb916044808201926020929091908290030181600087803b1580156131b857600080fd5b505af11580156131cc573d6000803e3d6000fd5b505050506040513d60208110156131e257600080fd5b50505050565b6131f06112d8565b61322e5760405160e560020a62461bcd02815260040180806020018281038252602d815260200180613db5602d913960400191505060405180910390fd5b613237816112b3565b613279576040805160e560020a62461bcd0281526020600482015260146024820152600080516020613ce5833981519152604482015290519081900360640190fd5b600160a060020a0381166000908152600560205260409020826132e6576040805160e560020a62461bcd02815260206004820152601860248201527f43616e27742065786572636973652030206f546f6b656e730000000000000000604482015290519081900360640190fd5b806001015483111561332c5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180613e31602e913960400191505060405180910390fd5b8261333633611be4565b101561338c576040805160e560020a62461bcd02815260206004820152601260248201527f4e6f7420656e6f756768206f546f6b656e730000000000000000000000000000604482015290519081900360640190fd5b600061339784611b9f565b60028301549091506133af908263ffffffff612e0916565b60028301556040805180820190915260018152600060208201819052906133d79086906138a0565b604080518082019091526009548152600a54600390810b810b900b60208201529091506000906134089087906138a0565b60145490915061341e908263ffffffff612e0916565b6014556000613433838363ffffffff612e0916565b855490915081111561348f576040805160e560020a62461bcd02815260206004820181905260248201527f5661756c7420756e64657277617465722c2063616e2774206578657263697365604482015290519081900360640190fd5b84546134a1908263ffffffff612df416565b855560018501546134b8908863ffffffff612df416565b60018601556017546134d290600160a060020a0316612bd7565b156135335783341461352e576040805160e560020a62461bcd02815260206004820152601360248201527f496e636f7272656374206d73672e76616c756500000000000000000000000000604482015290519081900360640190fd5b613626565b601754604080517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790529051600160a060020a03909216916323b872dd916064808201926020929091908290030181600087803b1580156135a657600080fd5b505af11580156135ba573d6000803e3d6000fd5b505050506040513d60208110156135d057600080fd5b5051613626576040805160e560020a62461bcd02815260206004820152601c60248201527f436f756c64206e6f74207472616e7366657220696e20746f6b656e7300000000604482015290519081900360640190fd5b61363033886139c9565b61363a33846130da565b60408051858152602081018590523381830152600160a060020a038816606082015290517ffa7bab37479e50a9b24a9412b879d400de9bcaa1e3a2b343e90bb370d85bbaa79181900360800190a150505050505050565b6018546016546000916001918291600160a060020a039081166801000000000000000090920416146136f9576016546136de90680100000000000000009004600160a060020a0316613a90565b6018549092506136f690600160a060020a0316613a90565b90505b600f548451600091613711919063ffffffff6137b616565b601054602087015191925060030b016000613736846126868a8863ffffffff6137b616565b601654909150600390810b90600090819085810b9084900b12156137875782850360030b915061378061377387600a85900a63ffffffff6137b616565b859063ffffffff6139a716565b9050612f3a565b84830360030b91506137a78661268686600a86900a63ffffffff6137b616565b9b9a5050505050505050505050565b6000826137c557506000611162565b828202828482816137d257fe5b041461115f57600080fd5b3390565b6017546137f690600160a060020a0316612bd7565b1561383157604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015613136573d6000803e3d6000fd5b601754604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b1580156131b857600080fd5b6018546016546000916001918291600160a060020a03908116680100000000000000009092041614613908576016546138ed90680100000000000000009004600160a060020a0316613a90565b60185490925061390590600160a060020a0316613a90565b90505b8351600f54600091613929918491612ea19182908b9063ffffffff6137b616565b6016546020870151601054929350600391820b92820b01919091039060009082900b811215613977578161396f866126868663ffffffff808616600a0a8116906137b616565b91505061399c565b6000829003613998866126868663ffffffff808616600a0a8116906139a716565b9150505b979650505050505050565b60008082116139b557600080fd5b60008284816139c057fe5b04949350505050565b600160a060020a0382166139dc57600080fd5b6003546139ef908263ffffffff612df416565b600355600160a060020a038216600090815260016020526040902054613a1b908263ffffffff612df416565b600160a060020a0383166000818152600160209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a031660009081526005602052604090206001015490565b6000600160a060020a038216613aaf5750670de0b6b3a76400006112d3565b601954604080517f41976e09000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916341976e09916024808301926020929190829003018186803b158015613b1557600080fd5b505afa158015613b29573d6000803e3d6000fd5b505050506040513d6020811015613b3f57600080fd5b505190506112d3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10613b8957805160ff1916838001178555613bb6565b82800160010185558215613bb6579182015b82811115613bb6578251825591602001919060010190613b9b565b50613bc2929150613bdd565b5090565b604080518082019091526000808252602082015290565b61120c91905b80821115613bc25760008155600101613be356fe43616e27742068617665206d696e436f6c6c61746572616c697a6174696f6e526174696f203c203143616e2774206c6971756964617465206d6f7265207468616e2031303025206f6620746865207661756c74455448206973206e6f74207468652073706563696669656420636f6c6c61746572616c20747970654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737343616e277420636f6c6c65637420636f6c6c61746572616c20756e74696c20657870697279436f756c64206e6f74207472616e7366657220696e20636f6c6c61746572616c20746f6b656e735661756c7420646f6573206e6f7420657869737400000000000000000000000043616e27742068617665203e323025206c69717569646174696f6e20696e63656e74697665537065636966696564207661756c7473206861766520696e73756666696369656e7420636f6c6c61746572616c43616e206f6e6c79206c6971756964617465206c69717569646174696f6e20666163746f7220617420616e7920676976656e2074696d6543616e27742072656d6f7665206d6f726520636f6c6c61746572616c207468616e206f776e656443616e2774206578657263697365206f757473696465206f66207468652065786572636973652077696e646f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657243616e6e6f742065786572636973652066726f6d2061207661756c74207468617420646f65736e277420657869737443616e2774206578657263697365206d6f7265206f546f6b656e73207468616e20746865206f776e6572206861734f7074696f6e7320636f6e747261637420657870697265640000000000000000a264697066735822122070a93dfba933afec10645d8f7a2f45bfb9e863bbbdce378a7f35b97730bb146264736f6c63430006000033",
  "sourceMap": "1172:2:8:-:0;153:7357:20;1165:14:8;;;-1:-1:-1;;1165:14:8;;;;1128:51;;;;;;;-1:-1:-1;;1128:51:8;;;;;;;;;;-1:-1:-1;1165:14:8;1250:13;;;;;;;1219:44;;;;;;;;;;;1441:3;1128:51;1434:15;;;;;;;;1400:49;;;;;;;;;;;;;;;1684:14;153:7357:20;1684:14:8;1691:2;1434:15;1684:14;;;-1:-1:-1;;1684:14:8;;1642:56;;;;;1128:51;1642:56;;;;;;2256:32;;;;;;;;-1:-1:-1;;2334:32:8;;;;;1058:732:20;5:2:-1;;;;30:1;27;20:12;5:2;1058:732:20;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;1058:732:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;896:17:7;916:12;:10;;;;:12;:::i;:::-;938:6;:18;;-1:-1:-1;;938:18:7;-1:-1:-1;938:18:7;;;;;;;971:43;;938:18;;-1:-1:-1;938:18:7;971:43;;938:6;;971:43;862:159;4158:7:8;4140:15;:25;4132:70;;;;;-1:-1:-1;;;;;4132:70:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4248:7;4233:11;:22;;4212:129;;;;-1:-1:-1;;;;;4212:129:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4372:31;4394:8;4372:21;;;;:31;:::i;:::-;4351:123;;;;-1:-1:-1;;;;;4351:123:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4505:37;4527:14;4505:21;;;;:37;:::i;:::-;4484:129;;;;-1:-1:-1;;;;;4484:129:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:33;4666:10;4644:21;;;;:33;:::i;:::-;4623:127;;;;-1:-1:-1;;;;;4623:127:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4781:41;4803:18;4781:21;;;;:41;:::i;:::-;4760:143;;;;-1:-1:-1;;;;;4760:143:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4927:11;4914:10;;:24;;;;;-1:-1:-1;;;;;4914:24:8;;;;;-1:-1:-1;;;;;4914:24:8;;;;;;4964:8;4948:13;;:24;;;;;;;;;;;;;;;;;;;;4996:11;4983:10;;:24;;;;;-1:-1:-1;;;;;4983:24:8;;;;;-1:-1:-1;;;;;4983:24:8;;;;;;5033:14;5017:13;;:30;;;;;;;;;;;;;;;;;;;;5078:29;;;;;;;;5085:1;5078:29;;;;5088:18;5078:29;;;;;5057:18;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5132:32;;;;;;;;5139:12;5132:32;;;;5153:10;5132:32;;;;;5118:11;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5183:7;5174:6;;:16;;;;;-1:-1:-1;;;;;5174:16:8;;;;;-1:-1:-1;;;;;5174:16:8;;;;;;5210:7;5201:6;:16;;;;5269:14;5227:15;;:57;;;;;-1:-1:-1;;;;;5227:57:8;;;;;-1:-1:-1;;;;;5227:57:8;;;;;;5312:16;5294:15;;:34;;;;;-1:-1:-1;;;;;5294:34:8;;;;;-1:-1:-1;;;;;5294:34:8;;;;;;5351:11;5338:10;:24;;;;3745:1624;;;;;;;;;;;;1058:732:20;;;;;;;;;;;;153:7357;;616:104:6;703:10;616:104;:::o;25401:124:8:-;25466:4;25498:2;25491:3;:9;;;;25490:27;;;;;-1:-1:-1;;25506:3:8;:10;;;;25490:27;25482:36;25401:124;-1:-1:-1;;25401:124:8:o;153:7357:20:-;;;;;;;",
  "deployedSourceMap": "153:7357:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12851:467:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12851:467:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12851:467:8;;-1:-1:-1;;;;;12851:467:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;7045:372;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7045:372:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7045:372:8;;;;;;;;;;;;;;;;;2721:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2721:18:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2721:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2788:154:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2788:154:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2788:154:0;;-1:-1:-1;;;;;2788:154:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;10189:111:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10189:111:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10189:111:8;-1:-1:-1;;;;;10189:111:8;;:::i;13817:166::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13817:166:8;;;:::i;18096:330::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18096:330:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18096:330:8;-1:-1:-1;;;;;18096:330:8;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;946:98:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;946:98:0;;;:::i;17194:769:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17194:769:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;17194:769:8;;;;;;-1:-1:-1;;;;;17194:769:8;;:::i;:::-;;3405:233:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3405:233:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3405:233:0;;;;;;;;;;;;;;;;;:::i;2854:21:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2854:21:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7042:466:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7042:466:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7042:466:20;;;;;;;;;;;-1:-1:-1;;;;;7042:466:20;;:::i;19522:847:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19522:847:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19522:847:8;;:::i;1400:49::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1400:49:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3377:422:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3377:422:20;;;;;;-1:-1:-1;;;;;3377:422:20;;:::i;4152:200:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4152:200:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4152:200:0;;-1:-1:-1;;;;;4152:200:0;;;;;;:::i;953:38:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;953:38:8;;;:::i;:::-;;;;-1:-1:-1;;;;;953:38:8;;;;;;;;;;;;;;5008:238:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5008:238:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5008:238:20;;;;;;;;;;;-1:-1:-1;;;;;5008:238:20;;:::i;14892:988:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14892:988:8;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;14892:988:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14892:988:8;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;14892:988:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;14892:988:8;;-1:-1:-1;14892:988:8;;-1:-1:-1;;;;;14892:988:8:i;5773:240:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5773:240:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5773:240:20;;;;;;;;;;;-1:-1:-1;;;;;5773:240:20;;:::i;32268:192:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32268:192:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32268:192:8;;:::i;2482:24::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2482:24:8;;;:::i;13430:311::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13430:311:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13430:311:8;;:::i;1256:113:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1256:113:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1256:113:0;-1:-1:-1;;;;;1256:113:0;;:::i;1720:145:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1720:145:7;;;:::i;10417:276:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10417:276:8;;;:::i;2635:46::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2635:46:8;;;:::i;1128:51::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:51:8;;;:::i;1097:77:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1097:77:7;;;:::i;14068:100:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14068:100:8;;;:::i;2781:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2781:20:8;;;:::i;11483:407::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11483:407:8;-1:-1:-1;;;;;11483:407:8;;:::i;1219:44::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1219:44:8;;;:::i;4871:210:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4871:210:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4871:210:0;;-1:-1:-1;;;;;4871:210:0;;;;;;:::i;2006:146::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2006:146:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2006:146:0;;-1:-1:-1;;;;;2006:146:0;;;;;;:::i;2568:20:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2568:20:8;;;:::i;2334:32::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2334:32:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2256;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:32:8;;;:::i;1844:::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1844:32:8;;;:::i;20624:777::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20624:777:8;;;:::i;9283:350::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9283:350:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9283:350:8;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;9283:350:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9283:350:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9283:350:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;9283:350:8;;;;;;;;-1:-1:-1;9283:350:8;;-1:-1:-1;;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;9283:350:8;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;9283:350:8;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;9283:350:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;9283:350:8;;-1:-1:-1;9283:350:8;;-1:-1:-1;;;;;9283:350:8:i;2960:196:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2960:196:20;;;;;;-1:-1:-1;;;;;2960:196:20;;:::i;1642:56:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1642:56:8;;;:::i;22967:1931::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22967:1931:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;22967:1931:8;;-1:-1:-1;;;;;22967:1931:8;;;;;;:::i;1756:25::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1756:25:8;;;:::i;6303:464:20:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6303:464:20;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6303:464:20;;;;;;;;;;;-1:-1:-1;;;;;6303:464:20;;:::i;25079:235:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25079:235:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25079:235:8;-1:-1:-1;;;;;25079:235:8;;:::i;4042:424:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4042:424:20;;;;;;-1:-1:-1;;;;;4042:424:20;;:::i;2401:24:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2401:24:8;;;:::i;1700:138:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1700:138:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1700:138:0;;;;;;;;;;:::i;21592:769:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21592:769:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21592:769:8;-1:-1:-1;;;;;21592:769:8;;:::i;2189:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2189:21:8;;;:::i;9808:213::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9808:213:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9808:213:8;-1:-1:-1;;;;;9808:213:8;;:::i;18932:334::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18932:334:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18932:334:8;;:::i;2275:194:20:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2275:194:20;;;;;;-1:-1:-1;;;;;2275:194:20;;:::i;7971:1094:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7971:1094:8;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;7971:1094:8;;;;;;;;;;;;;;;;;:::i;2014:240:7:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2014:240:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2014:240:7;-1:-1:-1;;;;;2014:240:7;;:::i;18542:102:8:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18542:102:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;18542:102:8;-1:-1:-1;;;;;18542:102:8;;:::i;16008:437::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16008:437:8;;;:::i;12851:467::-;12971:7;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;13015:10:::1;::::0;:55:::1;::::0;;;;;13039:10:::1;13015:55;::::0;::::1;::::0;13059:4:::1;13015:55:::0;;;;;;;;;;;;:10;;;::::1;-1:-1:-1::0;;;;;13015:10:8::1;::::0;:23:::1;::::0;:55;;;;;::::1;::::0;;;;;;;;;-1:-1:-1;13015:10:8;:55;::::1;;5:2:-1::0;::::1;;;30:1;27::::0;20:12:::1;5:2;13015:55:8;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;13015:55:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26::::0;19:12:::1;2:2;-1:-1:::0;13015:55:8;12994:141:::1;;;;-1:-1:-1::0;;;;;12994:141:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13153:20;13162:10;13153:8;:20::i;:::-;13145:53;;;::::0;;-1:-1:-1;;;;;13145:53:8;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;;13145:53:8;;;;;;;;;;;;;::::1;;13214:49;::::0;;-1:-1:-1;;;;;13214:49:8;::::1;::::0;;::::1;::::0;::::1;::::0;;;13252:10:::1;13214:49:::0;;;;;;::::1;::::0;;;;;;;::::1;13280:31;13295:10;13307:3;13280:14;:31::i;:::-;13273:38;;6956:1;12851:467:::0;;;;:::o;7045:372::-;7092:24;;7169:13;;7196:191;7220:11;:18;7216:22;;7196:191;;;7263:24;7272:11;7284:1;7272:14;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7272:14:8;7263:8;:24::i;:::-;7259:118;;;7323:11;7335:1;7323:14;;;;;;;;;;;;;;;;;;7307:13;;-1:-1:-1;;;;;7323:14:8;;;;7307:6;;7314:5;;7307:13;;;;;;-1:-1:-1;;;;;7307:30:8;;;;:13;;;;;;;;;;;:30;-1:-1:-1;7355:7:8;;;;;7259:118;7240:3;;7196:191;;;-1:-1:-1;7404:6:8;;-1:-1:-1;;7045:372:8;;:::o;2721:18::-;;;;;;;;;;;;;;;-1:-1:-1;;2721:18:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2788:154:0:-;2862:4;2878:36;2887:10;2899:7;2908:5;2878:8;:36::i;:::-;-1:-1:-1;2931:4:0;2788:154;;;;:::o;10189:111:8:-;-1:-1:-1;;;;;10274:13:8;;10251:4;10274:13;;;:6;:13;;;;;:19;;;;;10189:111;;;;:::o;13817:166::-;13866:4;13910:22;13921:10;;13910:6;;:10;;:22;;;;:::i;:::-;13891:15;:41;;13890:85;;;;;13968:6;;13950:15;:24;13890:85;13882:94;;13817:166;:::o;18096:330::-;-1:-1:-1;;;;;18256:18:8;18187:7;18256:18;;;:6;:18;;;;;18305:16;;-1:-1:-1;18335:19:8;;;-1:-1:-1;18368:16:8;;;18398:11;;;;;18305:16;;18335:19;;18368:16;18398:11;;;18096:330::o;946:98:0:-;1025:12;;946:98;:::o;17194:769:8:-;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;17435:20:::1;17444:10;17435:8;:20::i;:::-;17427:53;;;::::0;;-1:-1:-1;;;;;17427:53:8;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;;17427:53:8;;;;;;;;;;;;;::::1;;17520:10;17491:19;17513:18:::0;;;:6:::1;:18;::::0;;;;17634:19:::1;::::0;::::1;::::0;17513:18;;17491:19;17634:39:::1;::::0;17658:14;17634:39:::1;:23;:39;:::i;:::-;17606:67;;17691:43;17698:5;:16;;;17716:17;17691:6;:43::i;:::-;17683:70;;;::::0;;-1:-1:-1;;;;;17683:70:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;17793:19;::::0;::::1;:39:::0;;;17842:31:::1;17848:8:::0;17858:14;17842:5:::1;:31::i;:::-;17889:51;::::0;;-1:-1:-1;;;;;17889:51:8;::::1;::::0;;::::1;::::0;::::1;::::0;;;17929:10:::1;17889:51:::0;;;;;;::::1;::::0;;;;;;;::::1;17950:7;;6956:1;17194:769:::0;;:::o;3405:233:0:-;3493:4;3509:26;3519:4;3525:2;3529:5;3509:9;:26::i;:::-;-1:-1:-1;;;;;3572:14:0;;;;;;-1:-1:-1;3572:14:0;;;;;;;;3560:10;3572:26;;;;;;;;;3545:65;;3572:14;;:37;;3603:5;3572:30;:37::i;:::-;3545:8;:65::i;:::-;-1:-1:-1;3627:4:0;3405:233;;;;;:::o;2854:21:8:-;;;;;;:::o;7042:466:20:-;7200:45;7219:10;7231:13;7200:18;:45::i;:::-;;7255:40;7268:11;7289:4;7255:12;:40::i;:::-;7326:15;;;7305:51;;;;;;-1:-1:-1;;;;;7326:15:20;;;7305:51;;;;;;;;;;;;;;;:4;;:12;;:51;;;;;;;;;;;;;;-1:-1:-1;7305:4:20;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;7305:51:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7305:51:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;7366:15:20;;;:135;;;;;;-1:-1:-1;;;;;7366:135:20;;;;;;;;;;7437:4;7366:135;;;;-1:-1:-1;7366:135:20;;;;;;;;;;;;;;:15;;;;;:27;;:135;;;;;-1:-1:-1;7366:135:20;;;;;;-1:-1:-1;7366:15:20;:135;;;5:2:-1;;;;30:1;27;20:12;5:2;7366:135:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7366:135:20;;;;7042:466;;;:::o;19522:847:8:-;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;19619:1:::1;19605:11;:15;19597:54;;;::::0;;-1:-1:-1;;;;;19597:54:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;19669:20;19678:10;19669:8;:20::i;:::-;19661:53;;;::::0;;-1:-1:-1;;;;;19661:53:8;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;;19661:53:8;;;;;;;;;;;;;::::1;;19754:10;19725:19;19747:18:::0;;;:6:::1;:18;::::0;;;;;19811:25:::1;::::0;:13:::1;:25::i;:::-;19796:11;:40;;19775:126;;;;-1:-1:-1::0;;;;;19775:126:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20014:16:::0;;19983:28:::1;::::0;20014:33:::1;::::0;20035:11;20014:33:::1;:20;:33;:::i;:::-;19983:64;;20079:49;20086:20;20108:5;:19;;;20079:6;:49::i;:::-;20058:111;;;::::0;;-1:-1:-1;;;;;20058:111:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;20213:39:::0;;;20262:43:::1;20281:10;20293:11:::0;20262:18:::1;:43::i;:::-;20321:41;::::0;;;;;20351:10:::1;20321:41;::::0;::::1;::::0;;;::::1;::::0;;;;;;;;;::::1;6956:1;;19522:847:::0;:::o;1400:49::-;;;;;;;;:::o;3377:422:20:-;3515:11;:9;:11::i;:::-;;3536:50;3559:11;3580:4;3536:22;:50::i;:::-;3617:15;;;3596:51;;;;;;-1:-1:-1;;;;;3617:15:20;;;3596:51;;;;;;;;;;;;;;;:4;;:12;;:51;;;;;;;;;;;;;;-1:-1:-1;3596:4:20;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;3596:51:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3596:51:20;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;3657:15:20;;;:135;;;;;;-1:-1:-1;;;;;3657:135:20;;;;;;;;;;3728:4;3657:135;;;;-1:-1:-1;3657:135:20;;;;;;;;;;;;;;:15;;;;;:27;;:135;;;;;-1:-1:-1;3657:135:20;;;;;;-1:-1:-1;3657:15:20;:135;;;5:2:-1;;;;30:1;27;20:12;5:2;3657:135:20;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3657:135:20;;;;3377:422;;:::o;4152:200:0:-;4257:10;4232:4;4278:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4278:29:0;;;;;;;;;;4232:4;;4248:76;;4278:29;;:45;;4312:10;4278:33;:45::i;953:38:8:-;;;-1:-1:-1;;;;;953:38:8;;:::o;5008:238:20:-;5156:11;:9;:11::i;:::-;;5177:62;5202:11;5215:13;5230:8;5177:24;:62::i;:::-;5008:238;;;:::o;14892:988:8:-;15036:9;15031:719;15055:20;:27;15051:1;:31;15031:719;;;15103:26;15132:20;15153:1;15132:23;;;;;;;;;;;;;;15103:52;;15194:20;15203:10;15194:8;:20::i;:::-;15169:126;;;;-1:-1:-1;;;;;15169:126:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15331:18:8;;15309:19;15331:18;;;:6;:18;;;;;15367:22;15363:377;;15409:7;;;;;15363:377;15463:17;15440:5;:19;;;:40;15436:304;;15500:40;15510:17;15529:10;15500:9;:40::i;:::-;15558:7;;;;;15436:304;15645:19;;;;15623:42;;:17;;:42;:21;:42;:::i;:::-;15603:62;;15683:42;15693:5;:19;;;15714:10;15683:9;:42::i;:::-;-1:-1:-1;;15084:3:8;;15031:719;;;-1:-1:-1;15780:22:8;;15759:114;;;;-1:-1:-1;;;;;15759:114:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5773:240:20;5916:45;5935:10;5947:13;5916:18;:45::i;:::-;;5971:35;5984:11;5997:8;5971:12;:35::i;32268:192:8:-;32394:58;;;;;;;;;32426:25;32394:58;;;;;;;;;;;;;;;;;32364:7;;32394:58;;32411:13;;32394:16;:58::i;2482:24::-;;;-1:-1:-1;;;;;2482:24:8;;:::o;13430:311::-;13645:13;;13615:27;;13540:7;;13645:13;;;;;;;13615:27;;;:43;;;;13595:73;;13685:49;:17;13707:26;;;;:2;:26;13685:49;;:21;:49;:::i;:::-;13678:56;13430:311;-1:-1:-1;;;13430:311:8:o;1256:113:0:-;-1:-1:-1;;;;;1346:16:0;1320:7;1346:16;;;-1:-1:-1;1346:16:0;;;;;;;1256:113::o;1720:145:7:-;1311:12;:10;:12::i;:::-;1301:6;;-1:-1:-1;;;;;1301:22:7;;;:6;;:22;1293:67;;;;;-1:-1:-1;;;;;1293:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1293:67:7;;;;;;;;;;;;;;;1826:1:::1;1810:6:::0;;1789:40:::1;::::0;-1:-1:-1;;;;;1810:6:7;;::::1;::::0;1789:40:::1;::::0;1826:1;;1789:40:::1;1856:1;1839:19:::0;;-1:-1:-1;;1839:19:7::1;::::0;;1720:145::o;10417:276:8:-;10465:4;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;10490:20:::1;10499:10;10490:8;:20::i;:::-;10489:21;10481:55;;;::::0;;-1:-1:-1;;;;;10481:55:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;10568:20;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;10568:20:8;;;::::1;::::0;;::::1;::::0;;;;;;;;;10583:4:::1;10568:20:::0;;;;;;10554:10:::1;10547:18:::0;;;:6:::1;:18:::0;;;;;:41;;;;;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;10547:41:8::1;::::0;::::1;;::::0;;;::::1;::::0;;;10598:11:::1;27:10:-1::0;;23:18;;::::1;45:23:::0;;10598:28:8;;;;;;::::1;::::0;;-1:-1:-1;;;;;;10598:28:8::1;::::0;::::1;::::0;;10642:23;;;;;;;::::1;::::0;;;;;;;;::::1;-1:-1:-1::0;10682:4:8::1;10417:276:::0;:::o;2635:46::-;;;-1:-1:-1;;;;;2635:46:8;;:::o;1128:51::-;;;;;;;;:::o;1097:77:7:-;1135:7;1161:6;-1:-1:-1;;;;;1161:6:7;;1097:77::o;14068:100:8:-;14154:6;;14135:15;:25;;14068:100;:::o;2781:20::-;;;;;;;;;;;;;;;-1:-1:-1;;2781:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11483:407;11604:7;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;11641:10:::1;::::0;11635:17:::1;::::0;11641:10;;::::1;-1:-1:-1::0;;;;;11641:10:8::1;11635:5;:17::i;:::-;11627:70;;;;-1:-1:-1::0;;;;;11627:70:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11715:20;11724:10;11715:8;:20::i;:::-;11707:53;;;::::0;;-1:-1:-1;;;;;11707:53:8;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;;11707:53:8;;;;;;;;;;;;;::::1;;11776;::::0;;-1:-1:-1;;;;;11776:53:8;::::1;::::0;;11807:9:::1;11776:53;::::0;::::1;::::0;11818:10:::1;11776:53:::0;;;;;;::::1;::::0;;;;;;;::::1;11846:37;11861:10;11873:9;11846:14;:37::i;1219:44::-:0;;;;;;;;:::o;4871:210:0:-;4981:10;4956:4;5002:20;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5002:29:0;;;;;;;;;;4956:4;;4972:81;;5002:29;;:50;;5036:15;5002:33;:50::i;2006:146::-;2076:4;2092:32;2102:10;2114:2;2118:5;2092:9;:32::i;2568:20:8:-;;;-1:-1:-1;;;;;2568:20:8;;:::o;2334:32::-;;;;;;;;;:::o;2256:::-;;;;;;:::o;1844:::-;;;;;;;;:::o;20624:777::-;20679:12;:10;:12::i;:::-;20671:62;;;;-1:-1:-1;;;;;20671:62:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20751:20;20760:10;20751:8;:20::i;:::-;20743:53;;;;;-1:-1:-1;;;;;20743:53:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;20743:53:8;;;;;;;;;;;;;;;20873:10;20844:19;20866:18;;;:6;:18;;;;;20966:16;;21023;;;;;21050:20;;;-1:-1:-1;21080:19:8;;:23;;;21113:20;;;20866:18;;20966:16;;21023;21144:52;;20966:16;21144:18;:52::i;:::-;21206;21225:10;21237:20;21206:18;:52::i;:::-;21274:120;;;;;;;;;;;;21374:10;21274:120;;;;;;;;;;;;;;;20624:777;;;:::o;9283:350::-;1311:12:7;:10;:12::i;:::-;1301:6;;-1:-1:-1;;;;;1301:22:7;;;:6;;:22;1293:67;;;;;-1:-1:-1;;;;;1293:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1293:67:7;;;;;;;;;;;;;;;9394:12:8;;::::1;::::0;:4:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;9416:16:8;;::::1;::::0;:6:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;9464:27:8;;9442:8:::1;:50:::0;;-1:-1:-1;;9442:50:8::1;9464:27;::::0;;;::::1;;9459:32:::0;9442:50:::1;;::::0;;;::::1;::::0;;9502:124:::1;::::0;2960:196:20;3076:28;3093:10;3076:16;:28::i;:::-;;3114:35;3127:11;3140:8;3114:12;:35::i;1642:56:8:-;;;;;;;;:::o;22967:1931::-;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;23098:20:::1;23107:10;23098:8;:20::i;:::-;23090:53;;;::::0;;-1:-1:-1;;;;;23090:53:8;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;;23090:53:8;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;23176:18:8;::::1;23154:19;23176:18:::0;;;:6:::1;:18;::::0;;;;23255:20:::1;23176:18:::0;23255:8:::1;:20::i;:::-;23247:46;;;::::0;;-1:-1:-1;;;;;23247:46:8;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;23356:24:8;::::1;:10;:24;;23348:69;;;::::0;;-1:-1:-1;;;;;23348:69:8;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;23428:21;23452:92;23490:18;23522:12;;;;;;;;23529:1;23522:12;;;;23532:1;23522:12;;;;::::0;23452:24:::1;:92::i;:::-;23577:100;::::0;;;;::::1;::::0;;;23647:20:::1;23577:100:::0;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;23428:116;;-1:-1:-1;23554:20:8::1;::::0;23577:100:::1;::::0;23615:18;;23577:24:::1;:100::i;:::-;23554:123:::0;-1:-1:-1;23687:26:8::1;23716:31;:13:::0;23554:123;23716:31:::1;:17;:31;:::i;:::-;23905:17;:23:::0;23871:16;;23687:60;;-1:-1:-1;23835:33:8::1;::::0;23871:67:::1;::::0;::::1;:20;:67;:::i;:::-;23953:26:::0;;23835:103;;-1:-1:-1;23982:1:8::1;23953:26;::::0;;::::1;:30:::0;;::::1;;23949:353;;;24086:26:::0;;24027:100:::1;::::0;:25;;24086:26:::1;::::0;;::::1;24078:35:::0;::::1;24074:2;:39;24027:100;:29;:100;:::i;:::-;23999:128;;23949:353;;;24250:26:::0;;24186:105:::1;::::0;:25;;24250:26:::1;::::0;;::::1;;24245:31:::0;24237:40;::::1;24233:2;:44;24186:105;:29;:105;:::i;:::-;24158:133;;23949:353;24355:25;24333:18;:47;;24312:149;;;;-1:-1:-1::0;;;;;24312:149:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24542:16:::0;;:40:::1;::::0;24563:18;24542:40:::1;:20;:40;:::i;:::-;24523:59:::0;;24614:19:::1;::::0;::::1;::::0;:43:::1;::::0;24638:18;24614:43:::1;:23;:43;:::i;:::-;24592:19;::::0;::::1;:65:::0;24725:37:::1;24731:10;24743:18:::0;24725:5:::1;:37::i;:::-;24772:50;24791:10;24803:18;24772;:50::i;:::-;24838:53;::::0;;;;;-1:-1:-1;;;;;24838:53:8;::::1;;::::0;::::1;::::0;24880:10:::1;24838:53:::0;;;;;;::::1;::::0;;;;;;;::::1;6956:1;;;;;22967:1931:::0;;:::o;1756:25::-;;;;;;;;:::o;6303:464:20:-;6466:11;:9;:11::i;:::-;;6487:67;6512:11;6525:13;6548:4;6487:24;:67::i;25079:235:8:-;25146:4;25162:16;25182:97;25202:25;25216:10;25202:13;:25::i;:::-;25241:28;25258:10;25241:16;:28::i;:::-;25182:6;:97::i;:::-;25181:98;;25079:235;-1:-1:-1;;;25079:235:8:o;4042:424:20:-;4175:28;4192:10;4175:16;:28::i;:::-;;4213:40;4226:11;4247:4;4213:12;:40::i;2401:24:8:-;;;;;;-1:-1:-1;;;;;2401:24:8;;:::o;1700:138:0:-;-1:-1:-1;;;;;1807:15:0;;;1781:7;1807:15;;;-1:-1:-1;1807:15:0;;;;;;;;:24;;;;;;;;;;;;;1700:138::o;21592:769:8:-;21697:7;21724:20;21733:10;21724:8;:20::i;:::-;21720:635;;;-1:-1:-1;;;;;21782:18:8;;21760:19;21782:18;;;:6;:18;;;;;21964:26;;:17;21905:23;21850:33;;21782:18;;21760:19;21850:142;;21964:26;;;;21963:27;;21955:36;;21951:2;:40;;21850:79;;:33;:54;:79::i;:::-;:100;:142;:100;:142;:::i;:::-;22034:29;;21814:178;;-1:-1:-1;22034:29:8;;;;22007:11;22033:30;22025:39;;22021:2;:43;22078:26;;:::i;:::-;22107:120;;;;;;;;;22131:20;:26;22107:120;;22131:35;;22162:3;22131:35;:30;:35;:::i;:::-;22107:120;;22184:29;;;;;;22107:120;;;;;;;22078:149;-1:-1:-1;22248:57:8;22265:25;22078:149;22248:16;:57::i;:::-;22241:64;;;;;;;;21720:635;-1:-1:-1;22343:1:8;22336:8;;2189:21;;;;:::o;9808:213::-;1311:12:7;:10;:12::i;:::-;1301:6;;-1:-1:-1;;;;;1301:22:7;;;:6;;:22;1293:67;;;;;-1:-1:-1;;;;;1293:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1293:67:7;;;;;;;;;;;;;;;9897:8:8::1;::::0;;9882:12:::1;9915::::0;;;9937:34:::1;9956:8:::0;9897;9937:18:::1;:34::i;:::-;9987:27;::::0;;-1:-1:-1;;;;;9987:27:8;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;1370:1:7;9808:213:8::0;:::o;18932:334::-;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;19008:20:::1;19017:10;19008:8;:20::i;:::-;19000:53;;;::::0;;-1:-1:-1;;;;;19000:53:8;;::::1;;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;;19000:53:8;;;;;;;;;;;;;::::1;;19093:10;19064:19;19086:18:::0;;;:6:::1;:18;::::0;;;;19137:19:::1;::::0;::::1;::::0;:34:::1;::::0;19161:9;19137:34:::1;:23;:34;:::i;:::-;19115:19;::::0;::::1;:56:::0;19181:28:::1;19187:10;19199:9:::0;19181:5:::1;:28::i;:::-;19225:34;::::0;;19237:10:::1;19225:34:::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;;::::1;6956:1;18932:334:::0;:::o;2275:194:20:-;2396:11;:9;:11::i;:::-;;2417:45;2440:11;2453:8;2417:22;:45::i;7971:1094:8:-;1311:12:7;:10;:12::i;:::-;1301:6;;-1:-1:-1;;;;;1301:22:7;;;:6;;:22;1293:67;;;;;-1:-1:-1;;;;;1293:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1293:67:7;;;;;;;;;;;;;;;8228:3:8::1;8203:21;:28;;8182:112;;;;-1:-1:-1::0;;;;;8182:112:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8347:4;8325:18;:26;;8304:116;;;;-1:-1:-1::0;;;;;8304:116:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8457:3;8438:15;:22;;8430:67;;;::::0;;-1:-1:-1;;;;;8430:67:8;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8558:2;8528:26;:32;;8507:119;;;;-1:-1:-1::0;;;;;8507:119:8::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8637:20;:50:::0;;;8697:17:::1;:44:::0;;;8751:14:::1;:38:::0;;;8799:25:::1;:60:::0;;;8875:183:::1;8666:21:::0;8723:18;8774:15;8833:26;9041:7:::1;:5;:7::i;:::-;8875:183;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;-1:-1:-1;;;;;8875:183:8::1;::::0;;;;;;;;;-1:-1:-1;8875:183:8;;::::1;7971:1094:::0;;;;:::o;2014:240:7:-;1311:12;:10;:12::i;:::-;1301:6;;-1:-1:-1;;;;;1301:22:7;;;:6;;:22;1293:67;;;;;-1:-1:-1;;;;;1293:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;1293:67:7;;;;;;;;;;;;;;;-1:-1:-1;;;;;2102:22:7;::::1;2094:73;;;;-1:-1:-1::0;;;;;2094:73:7::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2203:6;::::0;;2182:38:::1;::::0;-1:-1:-1;;;;;2182:38:7;;::::1;::::0;2203:6;::::1;::::0;2182:38:::1;::::0;::::1;2230:6;:17:::0;;-1:-1:-1;;2230:17:7::1;-1:-1:-1::0;;;;;2230:17:7;;;::::1;::::0;;;::::1;::::0;;2014:240::o;18542:102:8:-;-1:-1:-1;;;;;18617:20:8;;;18542:102::o;16008:437::-;16061:20;16070:10;16061:8;:20::i;:::-;16053:53;;;;;-1:-1:-1;;;;;16053:53:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;16053:53:8;;;;;;;;;;;;;;;16145:10;16116:19;16138:18;;;:6;:18;;;;;16175:16;;;;16167:54;;;;;-1:-1:-1;;;;;16167:54:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;16263:16;;;;;16232:28;16289:20;;;16320:52;16339:10;16263:16;16320:18;:52::i;:::-;16387:50;;;;;;16426:10;16387:50;;;;;;;;;;;;;;;;;16008:437;;:::o;30119:276::-;30237:7;6905:12;:10;:12::i;:::-;6904:13;6896:50;;;;;-1:-1:-1;;;;;6896:50:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;6896:50:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;30282:18:8;::::1;30260:19;30282:18:::0;;;:6:::1;:18;::::0;;;;30329:16;;:25:::1;::::0;30350:3;30329:20:::1;:25::i;:::-;30310:44:::0;;;;;30119:276;-1:-1:-1;;;30119:276:8:o;6917:248:0:-;-1:-1:-1;;;;;7009:21:0;;7001:30;;;;;;-1:-1:-1;;;;;7049:19:0;;7041:28;;;;;;-1:-1:-1;;;;;7080:15:0;;;;;;;-1:-1:-1;7080:15:0;;;;;;;;:24;;;;;;;;;;;;;:32;;;7127:31;;;;;;;;;;;;;;;;;6917:248;;;:::o;1249:145:5:-;1307:7;1339:1;1334;:6;;1326:15;;;;;;-1:-1:-1;1363:5:5;;;1249:145::o;1477:::-;1535:7;1566:5;;;1589:6;;;;1581:15;;;;;30713:1313:8;30974:6;;30960:10;;30822:4;;30906:1;;;;-1:-1:-1;;;;;30974:6:8;;;30960:10;;;;;:20;30956:161;;31036:10;;31019:29;;31036:10;;;-1:-1:-1;;;;;31036:10:8;31019:8;:29::i;:::-;31098:6;;30996:52;;-1:-1:-1;31081:25:8;;-1:-1:-1;;;;;31098:6:8;31081:8;:25::i;:::-;31062:44;;30956:161;31342:11;:17;31292:25;:31;31239:19;;31261:99;;:63;;:13;;:63;:30;:63;:::i;:::-;:80;:99;:80;:99;:::i;:::-;31439:20;;31390:34;;31239:121;;-1:-1:-1;31439:20:8;31390:34;;;31439:20;;31390:69;31370:17;31493:85;31552:16;31494:39;:13;31512:20;31494:39;:17;:39;:::i;31493:85::-;31609:13;;31470:108;;-1:-1:-1;31609:13:8;;;;;31588:18;;;;31695:26;;;;;;;;31691:302;;;31751:26;;;31743:35;;;-1:-1:-1;31832:12:8;31804:24;:11;31820:2;:7;;;31804:24;:15;:24;:::i;:::-;:40;;31792:52;;31691:302;;;31889:26;;;31881:35;;;-1:-1:-1;31957:25:8;:12;31974:2;:7;;;31957:25;:16;:25;:::i;:::-;31942:11;:40;;31930:52;;31691:302;32010:9;30713:1313;-1:-1:-1;;;;;;;;;;30713:1313:8:o;5900:263:0:-;-1:-1:-1;;;;;5974:21:0;;5966:30;;;;;;6022:12;;:23;;6039:5;6022:23;:16;:23;:::i;:::-;6007:12;:38;-1:-1:-1;;;;;6076:18:0;;;;;;-1:-1:-1;6076:18:0;;;;;;:29;;6099:5;6076:22;:29::i;:::-;-1:-1:-1;;;;;6055:18:0;;;;;;-1:-1:-1;6055:18:0;;;;;;;;:50;;;;6120:36;;;;;;;6055:18;;;;6120:36;;;;;;;;;;5900:263;;:::o;5301:256::-;-1:-1:-1;;;;;5388:16:0;;5380:25;;;;;;-1:-1:-1;;;;;5434:15:0;;;;;;-1:-1:-1;5434:15:0;;;;;;:26;;5454:5;5434:19;:26::i;:::-;-1:-1:-1;;;;;5416:15:0;;;;;;;-1:-1:-1;5416:15:0;;;;;;:44;;;;5486:13;;;;;;;:24;;5504:5;5486:17;:24::i;:::-;-1:-1:-1;;;;;5470:13:0;;;;;;;-1:-1:-1;5470:13:0;;;;;;;;;:40;;;;5525:25;;;;;;;5470:13;;5525:25;;;;;;;;;;;;;5301:256;;;:::o;25636:201:8:-;-1:-1:-1;;;;;25779:18:8;25734:7;25779:18;;;:6;:18;;;;;25814:16;;25636:201::o;36207:221::-;36301:10;;36295:17;;36301:10;;;-1:-1:-1;;;;;36301:10:8;36295:5;:17::i;:::-;36291:131;;;36328:20;;-1:-1:-1;;;;;36328:14:8;;;:20;;;;;;;;;;;;:14;:20;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36328:20:8;36291:131;;;36379:10;;:32;;;;;;-1:-1:-1;;;;;36379:32:8;;;;;;;;;;;;;;;:10;;;;;;;;:19;;:32;;;;;;;;;;;;;;;-1:-1:-1;36379:10:8;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;36379:32:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;36379:32:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;36207:221:8;;:::o;27093:2811::-;27283:18;:16;:18::i;:::-;27262:110;;;;-1:-1:-1;;;;;27262:110:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27391:29;27400:19;27391:8;:29::i;:::-;27383:62;;;;;-1:-1:-1;;;;;27383:62:8;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;27383:62:8;;;;;;;;;;;;;;;-1:-1:-1;;;;;27478:27:8;;27456:19;27478:27;;;:6;:27;;;;;27523:21;27515:58;;;;;-1:-1:-1;;;;;27515:58:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;27679:5;:19;;;27658:17;:40;;27637:133;;;;-1:-1:-1;;;;;27637:133:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27878:17;27853:21;27863:10;27853:9;:21::i;:::-;:42;;27832:107;;;;;-1:-1:-1;;;;;27832:107:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;28034:26;28063:69;28105:17;28063:28;:69::i;:::-;28161:16;;;;28034:98;;-1:-1:-1;28161:40:8;;28034:98;28161:40;:20;:40;:::i;:::-;28142:16;;;:59;28444:12;;;;;;;;;28451:1;28444:12;;28346:26;28444:12;;;;;;28346:26;28375:91;;28413:17;;28375:24;:91::i;:::-;28544:93;;;;;;;;;28613:14;28544:93;;;;;;;;;;;;;;;;;28346:120;;-1:-1:-1;28527:14:8;;28544:93;;28582:17;;28544:24;:93::i;:::-;28658:8;;28527:110;;-1:-1:-1;28658:20:8;;28527:110;28658:20;:12;:20;:::i;:::-;28647:8;:31;28689:28;28720:30;:18;28743:6;28720:30;:22;:30;:::i;:::-;28805:16;;28689:61;;-1:-1:-1;28781:40:8;;;28760:119;;;;;-1:-1:-1;;;;;28760:119:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28959:16;;:42;;28980:20;28959:42;:20;:42;:::i;:::-;28940:61;;29033:19;;;;:42;;29057:17;29033:42;:23;:42;:::i;:::-;29011:19;;;:64;29206:10;;29200:17;;-1:-1:-1;;;;;29206:10:8;29200:5;:17::i;:::-;29196:377;;;29254:18;29241:9;:31;29233:63;;;;;-1:-1:-1;;;;;29233:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;29196:377;;;29352:10;;:148;;;;;;29397:10;29352:148;;;;29437:4;29352:148;;;;;;;;;;;;-1:-1:-1;;;;;29352:10:8;;;;:23;;:148;;;;;;;;;;;;;;;-1:-1:-1;29352:10:8;:148;;;5:2:-1;;;;30:1;27;20:12;5:2;29352:148:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29352:148:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29352:148:8;29327:235;;;;;-1:-1:-1;;;;;29327:235:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;29610:36;29616:10;29628:17;29610:5;:36::i;:::-;29691:50;29710:10;29722:18;29691;:50::i;:::-;29757:139;;;;;;;;;;;;29843:10;29757:139;;;;-1:-1:-1;;;;;29757:139:8;;;;;;;;;;;;;;;;;27093:2811;;;;;;;:::o;32988:1208::-;33265:6;;33251:10;;33110:7;;33197:1;;;;-1:-1:-1;;;;;33265:6:8;;;33251:10;;;;;:20;33247:161;;33327:10;;33310:29;;33327:10;;;-1:-1:-1;;;;;33327:10:8;33310:8;:29::i;:::-;33389:6;;33287:52;;-1:-1:-1;33372:25:8;;-1:-1:-1;;;;;33389:6:8;33372:8;:25::i;:::-;33353:44;;33247:161;33550:11;:17;33529:16;;33510;;33529:39;;:16;:39;:20;:39;:::i;:::-;33617:20;;33595:19;;;;33510:58;;-1:-1:-1;33617:20:8;;33595:42;33578:14;33671:85;33730:16;33672:39;:13;33690:20;33672:39;:17;:39;:::i;33671:85::-;33787:13;;33648:108;;-1:-1:-1;33787:13:8;;;;;33766:18;;;;33873:23;;;;;;;;33869:293;;;33926:23;;;33918:32;;;-1:-1:-1;33977:39:8;33994:21;:8;34007:2;:7;;;33994:21;:12;:21;:::i;:::-;33977:12;;:39;:16;:39;:::i;:::-;33964:52;;33869:293;;;34061:23;;;34053:32;;;-1:-1:-1;34112:39:8;34142:8;34112:25;:12;34129:2;:7;;;34112:25;:16;:25;:::i;:39::-;34099:52;32988:1208;-1:-1:-1;;;;;;;;;;;32988:1208:8:o;269:421:5:-;327:7;567:6;563:45;;-1:-1:-1;596:1:5;589:8;;563:45;630:5;;;634:1;630;:5;:1;653:5;;;;;:10;645:19;;;;;616:104:6;703:10;616:104;:::o;36635:221:8:-;36729:10;;36723:17;;-1:-1:-1;;;;;36729:10:8;36723:5;:17::i;:::-;36719:131;;;36756:20;;-1:-1:-1;;;;;36756:14:8;;;:20;;;;;;;;;;;;:14;:20;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;36719:131:8;36807:10;;:32;;;;;;-1:-1:-1;;;;;36807:32:8;;;;;;;;;;;;;;;:10;;;;;:19;;:32;;;;;;;;;;;;;;-1:-1:-1;36807:10:8;:32;;;5:2:-1;;;;30:1;27;20:12;34720:1280:8;34994:6;;34980:10;;34843:7;;34926:1;;;;-1:-1:-1;;;;;34994:6:8;;;34980:10;;;;;:20;34976:161;;35056:10;;35039:29;;35056:10;;;-1:-1:-1;;;;;35056:10:8;35039:8;:29::i;:::-;35118:6;;35016:52;;-1:-1:-1;35101:25:8;;-1:-1:-1;;;;;35118:6:8;35101:8;:25::i;:::-;35082:44;;34976:161;35295:16;;35259:11;:17;35196:34;;35233:114;;35330:16;;35233:79;;;;:8;;:44;:25;:44;:::i;:114::-;35456:13;;35422:19;;;;35387:20;;35196:151;;-1:-1:-1;35456:13:8;;;;35387:20;;;:54;:82;;;;;35357:27;;35523:25;;;;-1:-1:-1;35519:438:8;;;35584:21;35641:95;35702:20;35641:39;:26;35672:7;;;;:2;:7;35641:39;;;:30;:39;:::i;:95::-;35620:116;;35519:438;;;;35767:10;35787:26;;;35849:97;35912:20;35850:39;:26;35881:7;;;;:2;:7;35850:39;;;:30;:39;:::i;35849:97::-;35828:118;;35519:438;;35974:18;34720:1280;-1:-1:-1;;;;;;;34720:1280:8:o;820:296:5:-;878:7;975:1;971;:5;963:14;;;;;;987:9;1003:1;999;:5;;;;;;;820:296;-1:-1:-1;;;;820:296:5:o;6389:263:0:-;-1:-1:-1;;;;;6463:21:0;;6455:30;;;;;;6511:12;;:23;;6528:5;6511:23;:16;:23;:::i;:::-;6496:12;:38;-1:-1:-1;;;;;6565:18:0;;;;;;-1:-1:-1;6565:18:0;;;;;;:29;;6588:5;6565:22;:29::i;:::-;-1:-1:-1;;;;;6544:18:0;;;;;;-1:-1:-1;6544:18:0;;;;;;;;:50;;;;6609:36;;;;;;;6544:18;;6609:36;;;;;;;;;;;6389:263;;:::o;25949:207:8:-;-1:-1:-1;;;;;26095:18:8;26050:7;26095:18;;;:6;:18;;;;;-1:-1:-1;26130:19:8;;;25949:207::o;37013:215::-;37069:7;-1:-1:-1;;;;;37092:19:8;;37088:134;;-1:-1:-1;37135:6:8;37127:15;;37088:134;37180:15;;:31;;;;;;-1:-1:-1;;;;;37180:31:8;;;;;;;;;:15;;;;;:24;;:31;;;;;;;;;;;;;;:15;:31;;;5:2:-1;;;;30:1;27;20:12;5:2;37180:31:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37180:31:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37180:31:8;;-1:-1:-1;37173:38:8;;153:7357:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;153:7357:20;;;-1:-1:-1;153:7357:20;:::i;:::-;;;:::o;:::-;;;;;;;;;;-1:-1:-1;153:7357:20;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "// pragma solidity 0.5.10;\npragma solidity >=0.4.22 <0.7.0;\n\nimport \"./OptionsContract.sol\";\n\n/**\n * @title Opyn's Options Contract\n * @author Opyn\n */\n\ncontract oToken is OptionsContract {\n    /**\n    * @param _collateral The collateral asset\n    * @param _collExp The precision of the collateral (-18 if ETH)\n    * @param _underlying The asset that is being protected\n    * @param _underlyingExp The precision of the underlying asset\n    * @param _oTokenExchangeExp The precision of the `amount of underlying` that 1 oToken protects\n    * @param _strikePrice The amount of strike asset that will be paid out\n    * @param _strikeExp The precision of the strike asset (-18 if ETH)\n    * @param _strike The asset in which the insurance is calculated\n    * @param _expiry The time at which the insurance expires\n    * @param _optionsExchange The contract which interfaces with the exchange + oracle\n    * @param _oracleAddress The address of the oracle\n    * @param _windowSize UNIX time. Exercise window is from `expiry - _windowSize` to `expiry`.\n    */\n    constructor(\n        IERC20 _collateral,\n        int32 _collExp,\n        IERC20 _underlying,\n        int32 _underlyingExp,\n        int32 _oTokenExchangeExp,\n        uint256 _strikePrice,\n        int32 _strikeExp,\n        IERC20 _strike,\n        uint256 _expiry,\n        OptionsExchange _optionsExchange,\n        address _oracleAddress,\n        uint256 _windowSize\n    )\n        public\n        OptionsContract(\n            _collateral,\n            _collExp,\n            _underlying,\n            _underlyingExp,\n            _oTokenExchangeExp,\n            _strikePrice,\n            _strikeExp,\n            _strike,\n            _expiry,\n            _optionsExchange,\n            _oracleAddress,\n            _windowSize\n        )\n    {}\n\n    /**\n     * @notice opens a Vault, adds ETH collateral, and mints new oTokens in one step\n     * Remember that creating oTokens can put the owner at a risk of losing the collateral\n     * if an exercise event happens.\n     * The sell function provides the owner a chance to earn premiums.\n     * Ensure that you create and immediately sell oTokens atmoically.\n     * @param amtToCreate number of oTokens to create\n     * @param receiver address to send the Options to\n     */\n    function createETHCollateralOption(uint256 amtToCreate, address receiver)\n        external\n        payable\n    {\n        openVault();\n        addETHCollateralOption(amtToCreate, receiver);\n    }\n\n    /**\n     * @notice adds ETH collateral, and mints new oTokens in one step to an existing Vault\n     * Remember that creating oTokens can put the owner at a risk of losing the collateral\n     * if an exercise event happens.\n     * The sell function provides the owner a chance to earn premiums.\n     * Ensure that you create and immediately sell oTokens atmoically.\n     * @param amtToCreate number of oTokens to create\n     * @param receiver address to send the Options to\n     */\n    function addETHCollateralOption(uint256 amtToCreate, address receiver)\n        public\n        payable\n    {\n        addETHCollateral(msg.sender);\n        issueOTokens(amtToCreate, receiver);\n    }\n\n    /**\n     * @notice opens a Vault, adds ETH collateral, mints new oTokens and sell in one step\n     * @param amtToCreate number of oTokens to create\n     * @param receiver address to receive the premiums\n     */\n    function createAndSellETHCollateralOption(\n        uint256 amtToCreate,\n        address payable receiver\n    ) external payable {\n        openVault();\n        addETHCollateralOption(amtToCreate, address(this));\n        this.approve(address(optionsExchange), amtToCreate);\n        optionsExchange.sellOTokens(\n            receiver,\n            address(this),\n            address(0),\n            amtToCreate\n        );\n    }\n\n    /**\n     * @notice adds ETH collateral to an existing Vault, and mints new oTokens and sells the oTokens in one step\n     * @param amtToCreate number of oTokens to create\n     * @param receiver address to send the Options to\n     */\n    function addAndSellETHCollateralOption(\n        uint256 amtToCreate,\n        address payable receiver\n    ) public payable {\n        addETHCollateral(msg.sender);\n        issueOTokens(amtToCreate, address(this));\n        this.approve(address(optionsExchange), amtToCreate);\n        optionsExchange.sellOTokens(\n            receiver,\n            address(this),\n            address(0),\n            amtToCreate\n        );\n    }\n\n    /**\n     * @notice opens a Vault, adds ERC20 collateral, and mints new oTokens in one step\n     * Remember that creating oTokens can put the owner at a risk of losing the collateral\n     * if an exercise event happens.\n     * The sell function provides the owner a chance to earn premiums.\n     * Ensure that you create and immediately sell oTokens atmoically.\n     * @param amtToCreate number of oTokens to create\n     * @param amtCollateral amount of collateral added\n     * @param receiver address to send the Options to\n     */\n    function createERC20CollateralOption(\n        uint256 amtToCreate,\n        uint256 amtCollateral,\n        address receiver\n    ) external {\n        openVault();\n        addERC20CollateralOption(amtToCreate, amtCollateral, receiver);\n    }\n\n    /**\n     * @notice adds ERC20 collateral, and mints new oTokens in one step\n     * Remember that creating oTokens can put the owner at a risk of losing the collateral\n     * if an exercise event happens.\n     * The sell function provides the owner a chance to earn premiums.\n     * Ensure that you create and immediately sell oTokens atmoically.\n     * @param amtToCreate number of oTokens to create\n     * @param amtCollateral amount of collateral added\n     * @param receiver address to send the Options to\n     */\n    function addERC20CollateralOption(\n        uint256 amtToCreate,\n        uint256 amtCollateral,\n        address receiver\n    ) public {\n        addERC20Collateral(msg.sender, amtCollateral);\n        issueOTokens(amtToCreate, receiver);\n    }\n\n    /**\n     * @notice opens a Vault, adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\n     * @param amtToCreate number of oTokens to create\n     * @param amtCollateral amount of collateral added\n     * @param receiver address to send the Options to\n     */\n    function createAndSellERC20CollateralOption(\n        uint256 amtToCreate,\n        uint256 amtCollateral,\n        address payable receiver\n    ) external {\n        openVault();\n        addERC20CollateralOption(amtToCreate, amtCollateral, address(this));\n        this.approve(address(optionsExchange), amtToCreate);\n        optionsExchange.sellOTokens(\n            receiver,\n            address(this),\n            address(0),\n            amtToCreate\n        );\n    }\n\n    /**\n     * @notice adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\n     * @param amtToCreate number of oTokens to create\n     * @param amtCollateral amount of collateral added\n     * @param receiver address to send the Options to\n     */\n    function addAndSellERC20CollateralOption(\n        uint256 amtToCreate,\n        uint256 amtCollateral,\n        address payable receiver\n    ) public {\n        addERC20Collateral(msg.sender, amtCollateral);\n        issueOTokens(amtToCreate, address(this));\n        this.approve(address(optionsExchange), amtToCreate);\n        optionsExchange.sellOTokens(\n            receiver,\n            address(this),\n            address(0),\n            amtToCreate\n        );\n    }\n}\n",
  "sourcePath": "/Users/jenil/Desktop/code/hip/contracts/opyn/oToken.sol",
  "ast": {
    "absolutePath": "/Users/jenil/Desktop/code/hip/contracts/opyn/oToken.sol",
    "exportedSymbols": {
      "oToken": [
        5474
      ]
    },
    "id": 5475,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5168,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:32:20"
      },
      {
        "absolutePath": "/Users/jenil/Desktop/code/hip/contracts/opyn/OptionsContract.sol",
        "file": "./OptionsContract.sol",
        "id": 5169,
        "nodeType": "ImportDirective",
        "scope": 5475,
        "sourceUnit": 2959,
        "src": "61:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5170,
              "name": "OptionsContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2958,
              "src": "172:15:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptionsContract_$2958",
                "typeString": "contract OptionsContract"
              }
            },
            "id": 5171,
            "nodeType": "InheritanceSpecifier",
            "src": "172:15:20"
          }
        ],
        "contractDependencies": [
          395,
          465,
          736,
          839,
          2958
        ],
        "contractKind": "contract",
        "documentation": "@title Opyn's Options Contract\n@author Opyn",
        "fullyImplemented": true,
        "id": 5474,
        "linearizedBaseContracts": [
          5474,
          2958,
          395,
          465,
          839,
          736
        ],
        "name": "oToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5212,
              "nodeType": "Block",
              "src": "1788:2:20",
              "statements": []
            },
            "documentation": "@param _collateral The collateral asset\n@param _collExp The precision of the collateral (-18 if ETH)\n@param _underlying The asset that is being protected\n@param _underlyingExp The precision of the underlying asset\n@param _oTokenExchangeExp The precision of the `amount of underlying` that 1 oToken protects\n@param _strikePrice The amount of strike asset that will be paid out\n@param _strikeExp The precision of the strike asset (-18 if ETH)\n@param _strike The asset in which the insurance is calculated\n@param _expiry The time at which the insurance expires\n@param _optionsExchange The contract which interfaces with the exchange + oracle\n@param _oracleAddress The address of the oracle\n@param _windowSize UNIX time. Exercise window is from `expiry - _windowSize` to `expiry`.",
            "id": 5213,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5198,
                    "name": "_collateral",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5173,
                    "src": "1480:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5199,
                    "name": "_collExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5175,
                    "src": "1505:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5200,
                    "name": "_underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5177,
                    "src": "1527:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5201,
                    "name": "_underlyingExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5179,
                    "src": "1552:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5202,
                    "name": "_oTokenExchangeExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5181,
                    "src": "1580:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5203,
                    "name": "_strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5183,
                    "src": "1612:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5204,
                    "name": "_strikeExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5185,
                    "src": "1638:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5205,
                    "name": "_strike",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5187,
                    "src": "1662:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5206,
                    "name": "_expiry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5189,
                    "src": "1683:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5207,
                    "name": "_optionsExchange",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5191,
                    "src": "1704:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                      "typeString": "contract OptionsExchange"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5208,
                    "name": "_oracleAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5193,
                    "src": "1734:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5209,
                    "name": "_windowSize",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5195,
                    "src": "1762:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5210,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5197,
                  "name": "OptionsContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2958,
                  "src": "1451:15:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OptionsContract_$2958_$",
                    "typeString": "type(contract OptionsContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1451:332:20"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5173,
                  "name": "_collateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1079:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$465",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5172,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 465,
                    "src": "1079:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5175,
                  "name": "_collExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1107:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5174,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5177,
                  "name": "_underlying",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1131:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$465",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5176,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 465,
                    "src": "1131:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5179,
                  "name": "_underlyingExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1159:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5178,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5181,
                  "name": "_oTokenExchangeExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1189:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5180,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5183,
                  "name": "_strikePrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1223:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5185,
                  "name": "_strikeExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1253:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5184,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5187,
                  "name": "_strike",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1279:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$465",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5186,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 465,
                    "src": "1279:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5189,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1303:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5191,
                  "name": "_optionsExchange",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1328:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                    "typeString": "contract OptionsExchange"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5190,
                    "name": "OptionsExchange",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3467,
                    "src": "1328:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                      "typeString": "contract OptionsExchange"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5193,
                  "name": "_oracleAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1370:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5195,
                  "name": "_windowSize",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1402:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1069:358:20"
            },
            "returnParameters": {
              "id": 5211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:20"
            },
            "scope": 5474,
            "src": "1058:732:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5228,
              "nodeType": "Block",
              "src": "2386:83:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5220,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "2396:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5222,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5224,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5215,
                        "src": "2440:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5225,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "2453:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5223,
                      "name": "addETHCollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5247,
                      "src": "2417:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5227,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:45:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ETH collateral, and mints new oTokens in one step\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param receiver address to send the Options to",
            "functionSelector": "ed1f41c3",
            "id": 5229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5215,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5229,
                  "src": "2310:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5217,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5229,
                  "src": "2331:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2309:39:20"
            },
            "returnParameters": {
              "id": 5219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:20"
            },
            "scope": 5474,
            "src": "2275:194:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5246,
              "nodeType": "Block",
              "src": "3066:90:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "3093:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3093:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5236,
                      "name": "addETHCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "3076:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (address payable) returns (uint256)"
                      }
                    },
                    "id": 5239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5240,
                  "nodeType": "ExpressionStatement",
                  "src": "3076:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5242,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5231,
                        "src": "3127:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5243,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5233,
                        "src": "3140:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5241,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "3114:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3114:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5245,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:35:20"
                }
              ]
            },
            "documentation": "@notice adds ETH collateral, and mints new oTokens in one step to an existing Vault\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param receiver address to send the Options to",
            "functionSelector": "b96661ba",
            "id": 5247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5231,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5247,
                  "src": "2992:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5233,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5247,
                  "src": "3013:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2991:39:20"
            },
            "returnParameters": {
              "id": 5235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:20"
            },
            "scope": 5474,
            "src": "2960:196:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5290,
              "nodeType": "Block",
              "src": "3505:294:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5254,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "3515:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5256,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5258,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "3559:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5261,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "3580:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3572:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3572:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3572:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5257,
                      "name": "addETHCollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5247,
                      "src": "3536:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3536:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5264,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:50:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5270,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "3617:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3609:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3609:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3609:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5272,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "3635:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5265,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "3596:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "3596:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5274,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5278,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5251,
                        "src": "3698:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5281,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "3728:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3720:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5279,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3720:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3720:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3755:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3747:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3747:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3747:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5287,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "3771:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5275,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "3657:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "3657:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5289,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:135:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ETH collateral, mints new oTokens and sell in one step\n@param amtToCreate number of oTokens to create\n@param receiver address to receive the premiums",
            "functionSelector": "3667429f",
            "id": 5291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAndSellETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5249,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5291,
                  "src": "3428:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5251,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5291,
                  "src": "3457:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3418:69:20"
            },
            "returnParameters": {
              "id": 5253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3505:0:20"
            },
            "scope": 5474,
            "src": "3377:422:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5336,
              "nodeType": "Block",
              "src": "4165:301:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5299,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "4192:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4192:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5298,
                      "name": "addETHCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "4175:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (address payable) returns (uint256)"
                      }
                    },
                    "id": 5301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5302,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5304,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "4226:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5307,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "4247:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4239:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4239:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4239:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5303,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "4213:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4213:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5310,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5316,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "4284:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4276:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4276:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4276:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5318,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "4302:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5311,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "4263:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "4263:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5320,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5324,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5295,
                        "src": "4365:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5327,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "4395:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4387:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5325,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4387:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4387:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4422:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4414:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4414:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4414:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5333,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "4438:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5321,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "4324:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "4324:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5335,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:135:20"
                }
              ]
            },
            "documentation": "@notice adds ETH collateral to an existing Vault, and mints new oTokens and sells the oTokens in one step\n@param amtToCreate number of oTokens to create\n@param receiver address to send the Options to",
            "functionSelector": "cfbea789",
            "id": 5337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAndSellETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5293,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5337,
                  "src": "4090:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4090:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5295,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5337,
                  "src": "4119:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4080:69:20"
            },
            "returnParameters": {
              "id": 5297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:20"
            },
            "scope": 5474,
            "src": "4042:424:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5355,
              "nodeType": "Block",
              "src": "5146:100:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5346,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "5156:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5348,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5350,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "5202:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5351,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5341,
                        "src": "5215:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5352,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5343,
                        "src": "5230:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5349,
                      "name": "addERC20CollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "5177:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5354,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:62:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ERC20 collateral, and mints new oTokens in one step\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "52f89fe3",
            "id": 5356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5356,
                  "src": "5054:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5341,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5356,
                  "src": "5083:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5083:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5343,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5356,
                  "src": "5114:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5044:92:20"
            },
            "returnParameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:0:20"
            },
            "scope": 5474,
            "src": "5008:238:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5376,
              "nodeType": "Block",
              "src": "5906:107:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5366,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "5935:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5935:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5368,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5360,
                        "src": "5947:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5365,
                      "name": "addERC20Collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "5916:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address payable,uint256) returns (uint256)"
                      }
                    },
                    "id": 5369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5916:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5370,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5372,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5358,
                        "src": "5984:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5373,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5362,
                        "src": "5997:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5371,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "5971:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5375,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:35:20"
                }
              ]
            },
            "documentation": "@notice adds ERC20 collateral, and mints new oTokens in one step\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "5ca7c8a6",
            "id": 5377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5358,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "5816:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5816:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5360,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "5845:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5362,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "5876:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5806:92:20"
            },
            "returnParameters": {
              "id": 5364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5906:0:20"
            },
            "scope": 5474,
            "src": "5773:240:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5423,
              "nodeType": "Block",
              "src": "6456:311:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5386,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "6466:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6466:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5388,
                  "nodeType": "ExpressionStatement",
                  "src": "6466:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5390,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5379,
                        "src": "6512:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5391,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5381,
                        "src": "6525:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5394,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "6548:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6540:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6540:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6540:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5389,
                      "name": "addERC20CollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "6487:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5397,
                  "nodeType": "ExpressionStatement",
                  "src": "6487:67:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5403,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "6585:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6577:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6577:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6577:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5405,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5379,
                        "src": "6603:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5398,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "6564:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "6564:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5407,
                  "nodeType": "ExpressionStatement",
                  "src": "6564:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5411,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5383,
                        "src": "6666:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5414,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "6696:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6688:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6688:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6688:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6723:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6715:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6715:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6715:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5420,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5379,
                        "src": "6739:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5408,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "6625:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "6625:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6625:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5422,
                  "nodeType": "ExpressionStatement",
                  "src": "6625:135:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "c56749ce",
            "id": 5424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAndSellERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5379,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5424,
                  "src": "6356:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6356:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5381,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5424,
                  "src": "6385:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6385:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5383,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5424,
                  "src": "6416:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6416:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6346:100:20"
            },
            "returnParameters": {
              "id": 5385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6456:0:20"
            },
            "scope": 5474,
            "src": "6303:464:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5472,
              "nodeType": "Block",
              "src": "7190:318:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5434,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "7219:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7219:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5436,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "7231:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5433,
                      "name": "addERC20Collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "7200:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address payable,uint256) returns (uint256)"
                      }
                    },
                    "id": 5437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5438,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5440,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "7268:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "7289:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7281:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7281:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7281:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5439,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "7255:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7255:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5446,
                  "nodeType": "ExpressionStatement",
                  "src": "7255:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5452,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "7326:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7318:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7318:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7318:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5454,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "7344:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5447,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "7305:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "7305:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7305:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5456,
                  "nodeType": "ExpressionStatement",
                  "src": "7305:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5460,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5430,
                        "src": "7407:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5463,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "7437:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7429:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7429:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7429:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7464:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7456:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5465,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7456:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7456:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5469,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "7480:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5457,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "7366:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "7366:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5471,
                  "nodeType": "ExpressionStatement",
                  "src": "7366:135:20"
                }
              ]
            },
            "documentation": "@notice adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "3226052d",
            "id": 5473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAndSellERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5426,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5473,
                  "src": "7092:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7092:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5428,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5473,
                  "src": "7121:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5430,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5473,
                  "src": "7152:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7082:100:20"
            },
            "returnParameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7190:0:20"
            },
            "scope": 5474,
            "src": "7042:466:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5475,
        "src": "153:7357:20"
      }
    ],
    "src": "27:7484:20"
  },
  "legacyAST": {
    "absolutePath": "/Users/jenil/Desktop/code/hip/contracts/opyn/oToken.sol",
    "exportedSymbols": {
      "oToken": [
        5474
      ]
    },
    "id": 5475,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5168,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:32:20"
      },
      {
        "absolutePath": "/Users/jenil/Desktop/code/hip/contracts/opyn/OptionsContract.sol",
        "file": "./OptionsContract.sol",
        "id": 5169,
        "nodeType": "ImportDirective",
        "scope": 5475,
        "sourceUnit": 2959,
        "src": "61:31:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5170,
              "name": "OptionsContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2958,
              "src": "172:15:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptionsContract_$2958",
                "typeString": "contract OptionsContract"
              }
            },
            "id": 5171,
            "nodeType": "InheritanceSpecifier",
            "src": "172:15:20"
          }
        ],
        "contractDependencies": [
          395,
          465,
          736,
          839,
          2958
        ],
        "contractKind": "contract",
        "documentation": "@title Opyn's Options Contract\n@author Opyn",
        "fullyImplemented": true,
        "id": 5474,
        "linearizedBaseContracts": [
          5474,
          2958,
          395,
          465,
          839,
          736
        ],
        "name": "oToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5212,
              "nodeType": "Block",
              "src": "1788:2:20",
              "statements": []
            },
            "documentation": "@param _collateral The collateral asset\n@param _collExp The precision of the collateral (-18 if ETH)\n@param _underlying The asset that is being protected\n@param _underlyingExp The precision of the underlying asset\n@param _oTokenExchangeExp The precision of the `amount of underlying` that 1 oToken protects\n@param _strikePrice The amount of strike asset that will be paid out\n@param _strikeExp The precision of the strike asset (-18 if ETH)\n@param _strike The asset in which the insurance is calculated\n@param _expiry The time at which the insurance expires\n@param _optionsExchange The contract which interfaces with the exchange + oracle\n@param _oracleAddress The address of the oracle\n@param _windowSize UNIX time. Exercise window is from `expiry - _windowSize` to `expiry`.",
            "id": 5213,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5198,
                    "name": "_collateral",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5173,
                    "src": "1480:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5199,
                    "name": "_collExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5175,
                    "src": "1505:8:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5200,
                    "name": "_underlying",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5177,
                    "src": "1527:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5201,
                    "name": "_underlyingExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5179,
                    "src": "1552:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5202,
                    "name": "_oTokenExchangeExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5181,
                    "src": "1580:18:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5203,
                    "name": "_strikePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5183,
                    "src": "1612:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5204,
                    "name": "_strikeExp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5185,
                    "src": "1638:10:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5205,
                    "name": "_strike",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5187,
                    "src": "1662:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5206,
                    "name": "_expiry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5189,
                    "src": "1683:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5207,
                    "name": "_optionsExchange",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5191,
                    "src": "1704:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                      "typeString": "contract OptionsExchange"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5208,
                    "name": "_oracleAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5193,
                    "src": "1734:14:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 5209,
                    "name": "_windowSize",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5195,
                    "src": "1762:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 5210,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5197,
                  "name": "OptionsContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2958,
                  "src": "1451:15:20",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_OptionsContract_$2958_$",
                    "typeString": "type(contract OptionsContract)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1451:332:20"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5173,
                  "name": "_collateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1079:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$465",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5172,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 465,
                    "src": "1079:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5175,
                  "name": "_collExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1107:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5174,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1107:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5177,
                  "name": "_underlying",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1131:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$465",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5176,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 465,
                    "src": "1131:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5179,
                  "name": "_underlyingExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1159:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5178,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5181,
                  "name": "_oTokenExchangeExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1189:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5180,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5183,
                  "name": "_strikePrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1223:20:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1223:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5185,
                  "name": "_strikeExp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1253:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int32",
                    "typeString": "int32"
                  },
                  "typeName": {
                    "id": 5184,
                    "name": "int32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:5:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int32",
                      "typeString": "int32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5187,
                  "name": "_strike",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1279:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$465",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5186,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 465,
                    "src": "1279:6:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$465",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5189,
                  "name": "_expiry",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1303:15:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5191,
                  "name": "_optionsExchange",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1328:32:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                    "typeString": "contract OptionsExchange"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5190,
                    "name": "OptionsExchange",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3467,
                    "src": "1328:15:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                      "typeString": "contract OptionsExchange"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5193,
                  "name": "_oracleAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1370:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5195,
                  "name": "_windowSize",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5213,
                  "src": "1402:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1069:358:20"
            },
            "returnParameters": {
              "id": 5211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:20"
            },
            "scope": 5474,
            "src": "1058:732:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5228,
              "nodeType": "Block",
              "src": "2386:83:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5220,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "2396:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5222,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5224,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5215,
                        "src": "2440:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5225,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "2453:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5223,
                      "name": "addETHCollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5247,
                      "src": "2417:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5227,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:45:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ETH collateral, and mints new oTokens in one step\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param receiver address to send the Options to",
            "functionSelector": "ed1f41c3",
            "id": 5229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5215,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5229,
                  "src": "2310:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2310:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5217,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5229,
                  "src": "2331:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2309:39:20"
            },
            "returnParameters": {
              "id": 5219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:20"
            },
            "scope": 5474,
            "src": "2275:194:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5246,
              "nodeType": "Block",
              "src": "3066:90:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5237,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "3093:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3093:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5236,
                      "name": "addETHCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "3076:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (address payable) returns (uint256)"
                      }
                    },
                    "id": 5239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5240,
                  "nodeType": "ExpressionStatement",
                  "src": "3076:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5242,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5231,
                        "src": "3127:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5243,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5233,
                        "src": "3140:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5241,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "3114:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3114:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5245,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:35:20"
                }
              ]
            },
            "documentation": "@notice adds ETH collateral, and mints new oTokens in one step to an existing Vault\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param receiver address to send the Options to",
            "functionSelector": "b96661ba",
            "id": 5247,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5231,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5247,
                  "src": "2992:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2992:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5233,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5247,
                  "src": "3013:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3013:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2991:39:20"
            },
            "returnParameters": {
              "id": 5235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3066:0:20"
            },
            "scope": 5474,
            "src": "2960:196:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5290,
              "nodeType": "Block",
              "src": "3505:294:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5254,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "3515:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3515:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5256,
                  "nodeType": "ExpressionStatement",
                  "src": "3515:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5258,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "3559:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5261,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "3580:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3572:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3572:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3572:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5257,
                      "name": "addETHCollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5247,
                      "src": "3536:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3536:50:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5264,
                  "nodeType": "ExpressionStatement",
                  "src": "3536:50:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5270,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "3617:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3609:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3609:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3609:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5272,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "3635:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5265,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "3596:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "3596:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3596:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5274,
                  "nodeType": "ExpressionStatement",
                  "src": "3596:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5278,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5251,
                        "src": "3698:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5281,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "3728:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3720:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5279,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3720:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3720:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3755:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3747:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3747:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3747:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5287,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5249,
                        "src": "3771:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5275,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "3657:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "3657:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3657:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5289,
                  "nodeType": "ExpressionStatement",
                  "src": "3657:135:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ETH collateral, mints new oTokens and sell in one step\n@param amtToCreate number of oTokens to create\n@param receiver address to receive the premiums",
            "functionSelector": "3667429f",
            "id": 5291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAndSellETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5249,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5291,
                  "src": "3428:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5251,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5291,
                  "src": "3457:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3457:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3418:69:20"
            },
            "returnParameters": {
              "id": 5253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3505:0:20"
            },
            "scope": 5474,
            "src": "3377:422:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5336,
              "nodeType": "Block",
              "src": "4165:301:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5299,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "4192:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4192:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5298,
                      "name": "addETHCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1444,
                      "src": "4175:16:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (address payable) returns (uint256)"
                      }
                    },
                    "id": 5301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4175:28:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5302,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:28:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5304,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "4226:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5307,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "4247:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4239:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4239:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4239:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5303,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "4213:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4213:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5310,
                  "nodeType": "ExpressionStatement",
                  "src": "4213:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5316,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "4284:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4276:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4276:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4276:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5318,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "4302:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5311,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "4263:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "4263:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5320,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5324,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5295,
                        "src": "4365:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5327,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "4395:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4387:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5325,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4387:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4387:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4422:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4414:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5329,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4414:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4414:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5333,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5293,
                        "src": "4438:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5321,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "4324:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "4324:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4324:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5335,
                  "nodeType": "ExpressionStatement",
                  "src": "4324:135:20"
                }
              ]
            },
            "documentation": "@notice adds ETH collateral to an existing Vault, and mints new oTokens and sells the oTokens in one step\n@param amtToCreate number of oTokens to create\n@param receiver address to send the Options to",
            "functionSelector": "cfbea789",
            "id": 5337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAndSellETHCollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5293,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5337,
                  "src": "4090:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4090:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5295,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5337,
                  "src": "4119:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4119:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4080:69:20"
            },
            "returnParameters": {
              "id": 5297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4165:0:20"
            },
            "scope": 5474,
            "src": "4042:424:20",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5355,
              "nodeType": "Block",
              "src": "5146:100:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5346,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "5156:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5348,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5350,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5339,
                        "src": "5202:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5351,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5341,
                        "src": "5215:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5352,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5343,
                        "src": "5230:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5349,
                      "name": "addERC20CollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "5177:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5177:62:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5354,
                  "nodeType": "ExpressionStatement",
                  "src": "5177:62:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ERC20 collateral, and mints new oTokens in one step\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "52f89fe3",
            "id": 5356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5339,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5356,
                  "src": "5054:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5054:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5341,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5356,
                  "src": "5083:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5083:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5343,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5356,
                  "src": "5114:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5114:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5044:92:20"
            },
            "returnParameters": {
              "id": 5345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:0:20"
            },
            "scope": 5474,
            "src": "5008:238:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5376,
              "nodeType": "Block",
              "src": "5906:107:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5366,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "5935:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5935:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5368,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5360,
                        "src": "5947:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5365,
                      "name": "addERC20Collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "5916:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address payable,uint256) returns (uint256)"
                      }
                    },
                    "id": 5369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5916:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5370,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5372,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5358,
                        "src": "5984:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5373,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5362,
                        "src": "5997:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5371,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "5971:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5971:35:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5375,
                  "nodeType": "ExpressionStatement",
                  "src": "5971:35:20"
                }
              ]
            },
            "documentation": "@notice adds ERC20 collateral, and mints new oTokens in one step\nRemember that creating oTokens can put the owner at a risk of losing the collateral\nif an exercise event happens.\nThe sell function provides the owner a chance to earn premiums.\nEnsure that you create and immediately sell oTokens atmoically.\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "5ca7c8a6",
            "id": 5377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5358,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "5816:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5816:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5360,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "5845:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5845:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5362,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5377,
                  "src": "5876:16:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5876:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5806:92:20"
            },
            "returnParameters": {
              "id": 5364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5906:0:20"
            },
            "scope": 5474,
            "src": "5773:240:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5423,
              "nodeType": "Block",
              "src": "6456:311:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5386,
                      "name": "openVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1406,
                      "src": "6466:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bool_$",
                        "typeString": "function () returns (bool)"
                      }
                    },
                    "id": 5387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6466:11:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5388,
                  "nodeType": "ExpressionStatement",
                  "src": "6466:11:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5390,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5379,
                        "src": "6512:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5391,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5381,
                        "src": "6525:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5394,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "6548:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6540:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6540:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6540:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5389,
                      "name": "addERC20CollateralOption",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5377,
                      "src": "6487:24:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:67:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5397,
                  "nodeType": "ExpressionStatement",
                  "src": "6487:67:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5403,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "6585:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6577:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6577:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6577:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5405,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5379,
                        "src": "6603:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5398,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "6564:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "6564:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5407,
                  "nodeType": "ExpressionStatement",
                  "src": "6564:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5411,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5383,
                        "src": "6666:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5414,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "6696:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6688:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6688:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6688:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6723:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6715:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5416,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6715:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6715:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5420,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5379,
                        "src": "6739:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5408,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "6625:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "6625:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6625:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5422,
                  "nodeType": "ExpressionStatement",
                  "src": "6625:135:20"
                }
              ]
            },
            "documentation": "@notice opens a Vault, adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "c56749ce",
            "id": 5424,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAndSellERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5379,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5424,
                  "src": "6356:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5378,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6356:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5381,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5424,
                  "src": "6385:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6385:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5383,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5424,
                  "src": "6416:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6416:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6346:100:20"
            },
            "returnParameters": {
              "id": 5385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6456:0:20"
            },
            "scope": 5474,
            "src": "6303:464:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5472,
              "nodeType": "Block",
              "src": "7190:318:20",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5434,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5489,
                          "src": "7219:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7219:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5436,
                        "name": "amtCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "7231:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5433,
                      "name": "addERC20Collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "7200:18:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address payable,uint256) returns (uint256)"
                      }
                    },
                    "id": 5437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7200:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5438,
                  "nodeType": "ExpressionStatement",
                  "src": "7200:45:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5440,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "7268:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5443,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "7289:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7281:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5441,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7281:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7281:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5439,
                      "name": "issueOTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1740,
                      "src": "7255:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 5445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7255:40:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5446,
                  "nodeType": "ExpressionStatement",
                  "src": "7255:40:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5452,
                            "name": "optionsExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "7326:15:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                              "typeString": "contract OptionsExchange"
                            }
                          ],
                          "id": 5451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7318:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5450,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7318:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7318:24:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5454,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "7344:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5447,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5525,
                        "src": "7305:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_oToken_$5474",
                          "typeString": "contract oToken"
                        }
                      },
                      "id": 5449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99,
                      "src": "7305:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 5455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7305:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5456,
                  "nodeType": "ExpressionStatement",
                  "src": "7305:51:20"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5460,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5430,
                        "src": "7407:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 5463,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5525,
                            "src": "7437:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_oToken_$5474",
                              "typeString": "contract oToken"
                            }
                          ],
                          "id": 5462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7429:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7429:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7429:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 5467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7464:1:20",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7456:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5465,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7456:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7456:10:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5469,
                        "name": "amtToCreate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5426,
                        "src": "7480:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 5457,
                        "name": "optionsExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "7366:15:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptionsExchange_$3467",
                          "typeString": "contract OptionsExchange"
                        }
                      },
                      "id": 5459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellOTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "7366:27:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,address,address,uint256) external"
                      }
                    },
                    "id": 5470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:135:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5471,
                  "nodeType": "ExpressionStatement",
                  "src": "7366:135:20"
                }
              ]
            },
            "documentation": "@notice adds ERC20 collateral, mints new oTokens and sells the oTokens in one step\n@param amtToCreate number of oTokens to create\n@param amtCollateral amount of collateral added\n@param receiver address to send the Options to",
            "functionSelector": "3226052d",
            "id": 5473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAndSellERC20CollateralOption",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5426,
                  "name": "amtToCreate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5473,
                  "src": "7092:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7092:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5428,
                  "name": "amtCollateral",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5473,
                  "src": "7121:21:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5430,
                  "name": "receiver",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5473,
                  "src": "7152:24:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5429,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7152:15:20",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7082:100:20"
            },
            "returnParameters": {
              "id": 5432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7190:0:20"
            },
            "scope": 5474,
            "src": "7042:466:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5475,
        "src": "153:7357:20"
      }
    ],
    "src": "27:7484:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-22T18:19:27.763Z",
  "devdoc": {
    "author": "Opyn",
    "methods": {
      "addAndSellERC20CollateralOption(uint256,uint256,address)": {
        "params": {
          "amtCollateral": "amount of collateral added",
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "addAndSellETHCollateralOption(uint256,address)": {
        "params": {
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "addERC20Collateral(address,uint256)": {
        "params": {
          "amt": "the amount of collateral to be transferred in.",
          "vaultOwner": "the index of the Vault to which collateral will be added."
        }
      },
      "addERC20CollateralOption(uint256,uint256,address)": {
        "params": {
          "amtCollateral": "amount of collateral added",
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "addETHCollateral(address)": {
        "params": {
          "vaultOwner": "the index of the Vault to which collateral will be added."
        }
      },
      "addETHCollateralOption(uint256,address)": {
        "params": {
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "returns": {
          "_0": "A uint256 specifying the amount of tokens still available for the spender."
        }
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "returns": {
          "_0": "A uint256 representing the amount owned by the passed address."
        }
      },
      "burnOTokens(uint256)": {
        "details": "only want to call this function before expiry. After expiry, no benefit to calling it.",
        "params": {
          "amtToBurn": "number of oTokens to burn"
        }
      },
      "constructor": {
        "params": {
          "_collExp": "The precision of the collateral (-18 if ETH)",
          "_collateral": "The collateral asset",
          "_expiry": "The time at which the insurance expires",
          "_oTokenExchangeExp": "The precision of the `amount of underlying` that 1 oToken protects",
          "_optionsExchange": "The contract which interfaces with the exchange + oracle",
          "_oracleAddress": "The address of the oracle",
          "_strike": "The asset in which the insurance is calculated",
          "_strikeExp": "The precision of the strike asset (-18 if ETH)",
          "_strikePrice": "The amount of strike asset that will be paid out",
          "_underlying": "The asset that is being protected",
          "_underlyingExp": "The precision of the underlying asset",
          "_windowSize": "UNIX time. Exercise window is from `expiry - _windowSize` to `expiry`."
        }
      },
      "createAndSellERC20CollateralOption(uint256,uint256,address)": {
        "params": {
          "amtCollateral": "amount of collateral added",
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "createAndSellETHCollateralOption(uint256,address)": {
        "params": {
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to receive the premiums"
        }
      },
      "createERC20CollateralOption(uint256,uint256,address)": {
        "params": {
          "amtCollateral": "amount of collateral added",
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "createETHCollateralOption(uint256,address)": {
        "params": {
          "amtToCreate": "number of oTokens to create",
          "receiver": "address to send the Options to"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "exercise(uint256,address[])": {
        "params": {
          "oTokensToExercise": "the number of oTokens being exercised.",
          "vaultsToExerciseFrom": "the array of vaults to exercise from."
        }
      },
      "getVault(address)": {
        "params": {
          "vaultOwner": "the owner of the Vault to return"
        }
      },
      "hasVault(address)": {
        "params": {
          "owner": "The address of the supposed owner"
        },
        "returns": {
          "_0": "true or false"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isETH(address)": {
        "params": {
          "_ierc20": "the ERC20 asset."
        }
      },
      "isUnsafe(address)": {
        "params": {
          "vaultOwner": "The number of the vault to check"
        },
        "returns": {
          "_0": "true or false"
        }
      },
      "issueOTokens(uint256,address)": {
        "details": "The owner of a Vault should only be able to have a max of repo.collateral * collateralToStrike / (minminCollateralizationRatio * strikePrice) tokens issued.",
        "params": {
          "oTokensToIssue": "The number of o tokens to issue",
          "receiver": "The address to send the oTokens to"
        }
      },
      "liquidate(address,uint256)": {
        "details": "Liquidator comes with _oTokens. They get _oTokens * strikePrice * (incentive + fee) amount of collateral out. They can liquidate a max of liquidationFactor * vault.collateral out in one function call i.e. partial liquidations.",
        "params": {
          "oTokensToLiquidate": "The number of oTokens being taken out of circulation",
          "vaultOwner": "The index of the vault to be liquidated"
        }
      },
      "maxOTokensIssuable(uint256)": {
        "params": {
          "collateralAmt": "The amount of collateral against which oTokens will be issued."
        }
      },
      "maxOTokensLiquidatable(address)": {
        "params": {
          "vaultOwner": "The index of the vault to be liquidated"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "redeemVaultBalance()": {
        "details": "The owner gets all of their collateral back if no exercise event took their collateral."
      },
      "removeCollateral(uint256)": {
        "params": {
          "amtToRemove": "Amount of collateral to remove in 10^-18."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setDetails(string,string)": {
        "params": {
          "_name": "The name of the contract",
          "_symbol": "The symbol of the contract"
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address.",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFee(address)": {
        "params": {
          "_address": "The address to send the fee to."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateParameters(uint256,uint256,uint256,uint256)": {
        "params": {
          "_liquidationFactor": "Max amount that a Vault can be liquidated by. 500 is 0.5.",
          "_liquidationIncentive": "The incentive paid to liquidator. 10 is 0.01 i.e. 1% incentive.",
          "_minCollateralizationRatio": "The minimum ratio of a Vault's collateral to insurance promised. 16 means 1.6.",
          "_transactionFee": "The fees paid to our protocol every time a execution happens. 100 is egs. 0.1 i.e. 10%."
        }
      }
    },
    "title": "Opyn's Options Contract"
  },
  "userdoc": {
    "methods": {
      "addAndSellERC20CollateralOption(uint256,uint256,address)": {
        "notice": "adds ERC20 collateral, mints new oTokens and sells the oTokens in one step"
      },
      "addAndSellETHCollateralOption(uint256,address)": {
        "notice": "adds ETH collateral to an existing Vault, and mints new oTokens and sells the oTokens in one step"
      },
      "addERC20Collateral(address,uint256)": {
        "notice": "If the collateral type is any ERC20, anyone can call this function any time before expiry to increase the amount of collateral in a Vault. Can only transfer in the collateral asset. Will fail if ETH is the collateral asset. The user has to allow the contract to handle their ERC20 tokens on his behalf before these functions are called. Remember that adding ERC20 collateral even if no oTokens have been created can put the owner at a risk of losing the collateral. Ensure that you issue and immediately sell the oTokens! (Either call the createAndSell function in the oToken contract or batch the addERC20Collateral, issueOTokens and sell transactions and ensure they happen atomically to protect the end user)."
      },
      "addERC20CollateralOption(uint256,uint256,address)": {
        "notice": "adds ERC20 collateral, and mints new oTokens in one step Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically."
      },
      "addETHCollateral(address)": {
        "notice": "If the collateral type is ETH, anyone can call this function any time before expiry to increase the amount of collateral in a Vault. Will fail if ETH is not the collateral asset. Remember that adding ETH collateral even if no oTokens have been created can put the owner at a risk of losing the collateral if an exercise event happens. Ensure that you issue and immediately sell oTokens to allow the owner to earn premiums. (Either call the createAndSell function in the oToken contract or batch the addERC20Collateral, issueOTokens and sell transactions and ensure they happen atomically to protect the end user)."
      },
      "addETHCollateralOption(uint256,address)": {
        "notice": "adds ETH collateral, and mints new oTokens in one step to an existing Vault Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically."
      },
      "burnOTokens(uint256)": {
        "notice": "allows the owner to burn their oTokens to increase the collateralization ratio of their vault."
      },
      "createAndSellERC20CollateralOption(uint256,uint256,address)": {
        "notice": "opens a Vault, adds ERC20 collateral, mints new oTokens and sells the oTokens in one step"
      },
      "createAndSellETHCollateralOption(uint256,address)": {
        "notice": "opens a Vault, adds ETH collateral, mints new oTokens and sell in one step"
      },
      "createERC20CollateralOption(uint256,uint256,address)": {
        "notice": "opens a Vault, adds ERC20 collateral, and mints new oTokens in one step Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically."
      },
      "createETHCollateralOption(uint256,address)": {
        "notice": "opens a Vault, adds ETH collateral, and mints new oTokens in one step Remember that creating oTokens can put the owner at a risk of losing the collateral if an exercise event happens. The sell function provides the owner a chance to earn premiums. Ensure that you create and immediately sell oTokens atmoically."
      },
      "exercise(uint256,address[])": {
        "notice": "Called by anyone holding the oTokens and underlying during the exercise window i.e. from `expiry - windowSize` time to `expiry` time. The caller transfers in their oTokens and corresponding amount of underlying and gets `strikePrice * oTokens` amount of collateral out. The collateral paid out is taken from the each vault owner starting with the first and iterating until the oTokens to exercise are found. NOTE: This uses a for loop and hence could run out of gas if the array passed in is too big!"
      },
      "getVault(address)": {
        "notice": "Returns the vault for a given address"
      },
      "getVaultOwners()": {
        "notice": "This function gets the array of vaultOwners"
      },
      "hasExpired()": {
        "notice": "Returns true if the oToken contract has expired"
      },
      "hasVault(address)": {
        "notice": "Checks if a `owner` has already created a Vault"
      },
      "isETH(address)": {
        "notice": "Returns true if the given ERC20 is ETH."
      },
      "isExerciseWindow()": {
        "notice": "Returns true if exercise can be called"
      },
      "isUnsafe(address)": {
        "notice": "checks if a vault is unsafe. If so, it can be liquidated"
      },
      "issueOTokens(uint256,address)": {
        "notice": "This function is called to issue the option tokens. Remember that issuing oTokens even if they haven't been sold can put the owner at a risk of not making premiums on the oTokens. Ensure that you issue and immidiately sell the oTokens! (Either call the createAndSell function in the oToken contract of batch the issueOTokens transaction with a sell transaction and ensure it happens atomically)."
      },
      "liquidate(address,uint256)": {
        "notice": "This function can be called by anyone who notices a vault is undercollateralized. The caller gets a reward for reducing the amount of oTokens in circulation."
      },
      "maxOTokensIssuable(uint256)": {
        "notice": "This function returns the maximum amount of oTokens that can safely be issued against the specified amount of collateral."
      },
      "maxOTokensLiquidatable(address)": {
        "notice": "This function returns the maximum amount of collateral liquidatable if the given vault is unsafe"
      },
      "openVault()": {
        "notice": "Creates a new empty Vault and sets the owner of the vault to be the msg.sender."
      },
      "redeemVaultBalance()": {
        "notice": "after expiry, each vault holder can get back their proportional share of collateral from vaults that they own."
      },
      "removeCollateral(uint256)": {
        "notice": "allows the owner to remove excess collateral from the vault before expiry. Removing collateral lowers the collateralization ratio of the vault."
      },
      "removeUnderlying()": {
        "notice": "This function allows the vault owner to remove their share of underlying after an exercise"
      },
      "setDetails(string,string)": {
        "notice": "Can only be called by owner. Used to set the name, symbol and decimals of the contract"
      },
      "transferFee(address)": {
        "notice": "Can only be called by owner. Used to take out the protocol fees from the contract."
      },
      "underlyingRequiredToExercise(uint256)": {
        "notice": "Returns the amount of underlying to be transferred during an exercise call"
      },
      "updateParameters(uint256,uint256,uint256,uint256)": {
        "notice": "Can only be called by owner. Used to update the fees, minminCollateralizationRatio, etc"
      }
    }
  }
}